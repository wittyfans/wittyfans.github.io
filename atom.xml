<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wittyfans</title>
  
  <subtitle>学则不固,知则不惑</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wittyfans.com/"/>
  <updated>2018-10-14T15:45:51.321Z</updated>
  <id>http://wittyfans.com/</id>
  
  <author>
    <name>wittyfans</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>分享几篇Ted 演讲</title>
    <link href="http://wittyfans.com/writing/%E5%88%86%E4%BA%AB%E5%87%A0%E7%AF%87Ted-%E6%BC%94%E8%AE%B2.html"/>
    <id>http://wittyfans.com/writing/分享几篇Ted-演讲.html</id>
    <published>2018-10-14T15:35:09.000Z</published>
    <updated>2018-10-14T15:45:51.321Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://pg9xe296o.bkt.clouddn.com/Ted%E6%BC%94%E8%AE%B2selefbuiding.jpg" alt=""></p><blockquote><p>今天看了几个Ted演讲，做了些笔记</p></blockquote><a id="more"></a><h1 id="如何拥有一个自信的创造型性格？"><a href="#如何拥有一个自信的创造型性格？" class="headerlink" title="如何拥有一个自信的创造型性格？"></a>如何拥有一个自信的创造型性格？</h1><p>有些经历会扼杀人的创造力，比如你在尝试新的事物，听到别人不留情面、贬低的话。</p><p>但其实如果你坚持到底，就会发现你的潜力是多么的惊人。</p><p>对别人不留情面、贬低的话的关心，叫做评价恐惧症。</p><blockquote><p>No one can make you feel inferior without your consent.</p></blockquote><ul><li>你不去做一件事，因为你害怕被评价</li><li>说不出正确的有创造力的想法，害怕被别人评头论足</li></ul><p>有一种方法可以短期内治疗恐惧症：引导性掌控</p><p>比如你怕蛇，那么：</p><ol><li>远距离观察</li><li>慢慢接近</li><li>戴好防护装备</li><li>近距离接触它</li></ol><p>你会发现也没那么可怕，当你把恐惧变成熟悉，让自己习惯它，你就会开始掌控你的恐惧。</p><h1 id="如何为自己发声？"><a href="#如何为自己发声？" class="headerlink" title="如何为自己发声？"></a>如何为自己发声？</h1><blockquote><p>大声说话，并不简单</p></blockquote><p>有时我们会在不应该大声说话的时候大声说，有时却在应该大声为自己说话的时候沉默。</p><p><strong>Speak UP（大声说）:</strong></p><ul><li>Pushing one’s interests / 推动自身利益</li><li>Expressing an opinion / 表达观点</li><li>Making an ambitious ask / 提出有抱负的要求</li></ul><p>每个人都有一个可接受行为范围，类似这样</p><p><em>Weak</em>-OK-<strong>Great</strong>-OK-<em>Strong</em></p><p>对应的，是我们心里所想的：</p><p>Punishment-<strong>Reward</strong>-Punishment</p><p>我们害怕，走出ok，就会收到惩罚。</p><p>首先我们要明白的是，我的可接受行为范围是什么？注意，可接受行为并不是固定的，那么是什么决定了这个范围的大小呢？那就是你的<strong>实力（Power）</strong>。</p><p>Power有很多种形式，比如你跟对手谈判，对手有很多种备用选择，而你没有。</p><p>当你拥有很强的power的时候，你的行动就有了很大的余地。当你的实力不行的时候，就会陷入弱势两难的境地。</p><ol><li>你不为自己说话，你就会被忽视</li><li>你为自己说话，你就会被惩罚</li></ol><p>所以我们必须找到方法，扩大自己可接受范围的方法，下面是我们的建议：</p><ol><li>你在自己眼中是有实力的</li><li>利用熊妈妈效应，即为他人说话，我们的底气会更足</li><li>换位思考——扩大可接受范围最重要的工具</li><li>灵活性</li><li>向他人求助</li><li>专业知识</li><li>分享你的热情</li></ol><p><em>说实话，这个演讲前半部分不错，后面提出解决方案的时候，让我有一种烂尾的感觉…</em></p><h1 id="如何将一群陌生人变成一个团队"><a href="#如何将一群陌生人变成一个团队" class="headerlink" title="如何将一群陌生人变成一个团队"></a>如何将一群陌生人变成一个团队</h1><p>什么是团队合作？<br>即与各种各样的人进行协调、合作。</p><p>一个团队是稳定的、联系着、的相对比较小的、互相依靠、达到共享结果的组织。我们的工作和商业，对团队合作的要求越来越高。而且，我们可能面对的，不是一个稳定的团队，有可能是临时随机组建起来的一个team，比如医院，24小时营业、平均每个病人要被60个人照顾，意味着如果你是医院的员工，你随时会跟不同的人合作。</p><blockquote><p>我们今天遇到的问题如此巨大，如此具有挑战性。很明显，我们不能单独行动，所以当你知道你必须邀请人们进来的时候，你会有一种谦逊的态度，像粮食和水资源短缺这种问题，是不能由个人来解决的，甚至是一个公司，一个政府机构，我们需要大规模的合作。——联合利华创始人<br>那么要怎么实现有效的跨产业的团队合作呢？但也很简单：</p></blockquote><p>首先在团队中，领导者不知道要去哪里，也是一种好事情，因为It’s hard to learn if you already know, 所以，某些情况下你不知道要怎么办，会让你的团队更有好奇心，更有心理安全感，让你可以与队友一起承担风险。</p><p>不要有it’s me or you 的想法，当你把队友看成竞争对手的时候，否则你就很难去团队合作，像林肯说的一样：</p><blockquote><p>I don’t like that man. I must get to know him better —— AbrahamLincoln</p></blockquote><p>这就是一种你在进行有效合作时所需要的心态。</p><p><em>这个演讲是一个指导，而不是具体的建议，但我觉得很棒。</em></p><p align="right">一帆 2018.9.14 长沙岳麓</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://pg9xe296o.bkt.clouddn.com/Ted%E6%BC%94%E8%AE%B2selefbuiding.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;今天看了几个Ted演讲，做了些笔记&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="writing" scheme="http://wittyfans.com/categories/writing/"/>
    
    
      <category term="Ted" scheme="http://wittyfans.com/tags/Ted/"/>
    
  </entry>
  
  <entry>
    <title>强势谈判</title>
    <link href="http://wittyfans.com/reading/%E5%BC%BA%E5%8A%BF%E8%B0%88%E5%88%A4.html"/>
    <id>http://wittyfans.com/reading/强势谈判.html</id>
    <published>2018-10-13T07:35:29.000Z</published>
    <updated>2018-10-14T15:38:59.896Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://pg9xe296o.bkt.clouddn.com/%E5%BC%BA%E5%8A%BF%E8%B0%88%E5%88%A4%E5%B0%81%E9%9D%A2.jpg" alt="强势谈判是倾听、发现、而不是用强硬的态度去索取"></p><blockquote><p>我没问题，你没问题，我们一起来解决问题。</p></blockquote><a id="more"></a><h1 id="谈判力"><a href="#谈判力" class="headerlink" title="谈判力"></a>谈判力</h1><p>开篇作者一直提醒我们，不要先入为主，不要放过任何一个信息，到底什么样的信息会让我们先入为主呢？</p><p>面对谈判，拒绝先入为主的动作，意味着我们需要花时间去思考自己的思维模式，那么是否值得？这样势必会耽误一些时间，在与对方谈判的同时，我们可能只有很短暂的时间去思考，我们需要去理会对方说的话，同时我们还会去比对我们自己的看法，在这两种看法当中，提醒自己不去先入为主，是为了争取什么呢？</p><ol><li>避免错过重要的机会？</li><li>避免自己错误的观点？（错误的观点也有可能对自己有利）</li><li>避免在维护自己观点的过程中做出不合理的行为？</li></ol><p><em>作者说，先入为主的人，脑海里都是在忙着在思考那些辩论的语言，所以容易被超负荷的信息击垮（组织语言+对方不断的回应），一种方法是，全神贯注的倾听对方，利用 后面几章的技巧 ，你就可以给对方安全感，让对方丢掉自己的盔甲。</em></p><p>倾听对方，可以弄清楚对方的真实需求（无论是金钱、感情、或其他，而不是口头所说的），在你开口之前，让对方有足够的安全感提要求。</p><p><em>可以看出，作者想说明的是，弄清楚对方真正需求、建立足够的信任和安全感，而方法就是通过倾听。</em></p><p>作者举例了一些破坏信任感、以及劫匪没安全感的行为：</p><ol><li>警察把劫匪的声音公开，周边的人都能听到</li><li>劫匪不愿说自己的姓名</li><li>过于急躁、让劫匪感觉自己说的话没有被倾听</li></ol><p>我们对他人思想的理解，并不是自己思考出来的，而是对他人感受的瞬间把握，进而说明了微笑的重要性，当你的思考都在一个积极的框架之内，你的思维会更敏捷，更容易展现合作的姿态把问题解决。</p><p><em>假如你要拒绝别人，那么面带微笑、平淡、简单而友好的直接说，不好意思，我不xxx，营造一种安全的氛围</em></p><p>作者处理案例的步骤：</p><ol><li>通过积极的姿态，告诉他，“我没问题，你也没问题，我们一起解决问题吧”</li><li>重复对方的话——你可以表达不同意，但对方却无法反驳，同时对方会思考他的要求的合理性，继续重复他说的话，同时<strong>用积极的姿态拒绝他。</strong></li></ol><p>对手可能会随时做决定，你需要思考对方想要的是什么，比如劫匪突然提出要释放一个人质，不是他手足无措，你占了上风，而是劫匪希望借此妥协他可以赢得更多时间，争取逃脱的机会。</p><h2 id="同理心"><a href="#同理心" class="headerlink" title="同理心"></a>同理心</h2><p>作者提问：</p><blockquote><p>处理争执的时候，当情感本身成为了一种问题，我们常说的将人与问题分开，要如何做到？情绪是让对方沟通偏离正轨的主要因素，当一个人对另一个人失望时，理性的思考也就烟消云散了。</p></blockquote><p>所以，对于谈判，情感是客观存在的，但这不是障碍，而且意味着方法，你可以把自己的、对手的情感进行<em>标注</em>，当你完成情感标注，就不会感到紧张。</p><p>这需要<strong>同理心</strong>。</p><p>作者定义，<strong>同理心是一种洞察对方想法，并用语言表达出来的能力，努力站在对方角度理解形式，但这不等于同意对方价值挂和信仰。</strong>，这一章想说明的还有一个是策略同情心，也就是需要运用策略对他人产生影响。</p><p><em>同理心是我一直在关注的一个问题，实际上，在我的感情经历当中，我一直觉得自己没有被同理心对待，之前我看过一本教育熊孩子的书，里面就谈到了利用同理心+重复小孩的话来建立亲子之间的联系，我知道同理心的运用会有效果，但当运用同理心的策略的时候，会有些人无法体贴到你的感受，得寸进尺的人身攻击，此时你就会怀疑自己是否有必要去忍受这些，你会怀疑是否值得继续运用这种策略，因为根本就没有效果，而且让自己非常难受，这是我运用这个策略遇到的挑战，还有一个问题是，面对一个不愿意跟你商量，不讲道理人，你是选择妥协，还是摆出自己的底线直接拒绝对方呢？</em></p><p><em>对于性格强势的人，往往会忽视运用同理心，而对于一些过分在意别人的评价的人，往往给予太多，导致自己受伤害，目前我还不知道怎么办，也许只有非常了解自己的人，才能做到游刃有余</em></p><p>发生语言争执的时候，我们很难在任何事情上说服别人，因为我们只关心自己的想法和目标，但好的警察却可以轻松让愤怒而暴力的人停止打斗，为什么呢？</p><p>同理性不是对别人的称赞、退让，而是理解对方这么做的意义，明白什么力量可以改变他们，所以倾听并不是示弱，而是了解对方（通过对方的表达）+找到解决冲突的办法（对症下药），然后通过交流影响对方，这就是策略同理心的运用。</p><p>情感标注是策略同理心的一种表达方式，即告诉对方你站在他的角度考虑问题的看到的东西。</p><blockquote><p>运用情感标注的时候，提出问题后然后保持安静，不要试图马上问下一个问题。</p></blockquote><h2 id="调节情感"><a href="#调节情感" class="headerlink" title="调节情感"></a>调节情感</h2><p>人的情感，一是展示、而是潜在。</p><p>比如，一个老人在家庭节日晚餐上勃然大怒，从展示上来说，他是古怪暴躁，但潜在的情感却是悲伤而孤独，因为他的家人从来不来探望他。</p><p><em>在我看来，作者说的标注的意义就在于，让你自己能够明确的知道对方的情绪，并且认真对待它，不是和对手在表面的展示层面争执，而是从深层次的潜在去把握对方的情感，与他产生共鸣</em></p><h2 id="对指控进行审查"><a href="#对指控进行审查" class="headerlink" title="对指控进行审查"></a>对指控进行审查</h2><p>指控审查的运用最初是在法庭之上，原告提前很恰当的把对被告的指控全部复述一遍。<br>在谈判中，你可以把对方对你的一切最严厉的指控都写出来，然后在说话之前进行复述，辅以合适的时机的标注（对各自优势的强调），也许会有不错的效果。</p><p><em>作者接下来举了一个机场的例子，因天气原因大部分旅客误机，机场服务人员被前面的旅客辱骂之后，作者前去攀谈，对他表示了同情并进行了标注，然后成功的拿到了空位机票而且升级了头等舱。</em></p><p><em>在我看来这个例子要说明的道理与咱们的著作《弟子规》中箴言差不多:</em></p><blockquote><p>入则孝，出则悌，谨而信，泛爱众，而亲仁</p></blockquote><p><em>在社会上，我们泛爱众人，有一个对我们生活的这个空间的爱，一个仁慈的心态去对待身边众人，这样才会有一个自然的交流，就像作者学习要点中所强调的一样，当你运用这些技巧的时候，希望你看作人类自然交互的延展，而非认为做作的谈话技巧。</em></p><p>对同理心的运用可能会让人感到不适或者做作，就像人刚开始学习走路，也会变扭，习惯就好。其次，同理心的目的是让对方知道你在倾听，而不是去同意对方的观点。</p><p>话术：</p><blockquote><p>我希望你在整个过程当中都能被公平对待，如果不是，请随时打断我，然后我们一起解决问题。</p></blockquote><p>人们会更愿意冒更大的风险去规避损失，而不是争取利益。所以，在谈判中，你需要明确的告诉他们，如果协议谈不成，你将会失去一些实质性的东西。</p><p><em>我觉得强调对方的亏损是必要的，但要以合适的方式说出来，避免误以为你是在要挟对方。另原书第124页的案例很精彩，可以去看一下。</em></p><p>对与报价和薪资谈判这类问题，在不了解市场行情的情况下，尽量不要做第一个报价的人，你可以说，给我一个公平的市场价格就行，试探一下对方，如果对方一定要你先说，你尽量给出一个薪资范围，而不是具体的数字。</p><p>其次，如果价格不满意，可以操控非价格条款，作者比例如他给律师协会培训，但是协会付不起高昂的费用，但可以让他上全国律师协会的杂志封面，这个行为对律师协会来说是很简单的，但对作者来说则是无价的。</p><p>如果你的提出的价格很高，对方无法接受，或则对方的价格你无法接受，你可以象征性的给出一个“回报”，比如书中所说的一台CD机。</p><blockquote><p>我个人补充一点，中国人的性情总是喜欢调和、折中的，譬如你说，这屋子太暗，说在这里开一个天窗，大家一定是不允许的。但如果你主张拆掉屋顶，他们就会来调和，愿意开天窗了。”<br>在谈判中也是这样，所谓“漫天要价，坐地还钱”，一开始提的要求决不可太低，一定要远远高出自己的预期，这样才能保证最后的结果符合自己的预期。<br>倘若你一开始就提一个很低的要求，而后层层加码，对方绝不会以为你提的很低的要求是好意，反而只会把注意力放在你的层层加码上，觉得你怎么是如此的贪得无厌，一直在增加要求。</p></blockquote><h2 id="如何谈好薪酬"><a href="#如何谈好薪酬" class="headerlink" title="如何谈好薪酬"></a>如何谈好薪酬</h2><ul><li>愉快的坚持非工资条款，非工资条款包括一些假期的延长，办公时间等条款，在这些方面的要求可以不要松懈，因为公司也许会在薪资方面对你有所补偿</li><li>公司需要有奖励条款，当你做到了奖励条款所要求的东西，你才能提要求</li><li>激发他对你成功的兴趣，让他们知道，你的成功也包括了公司的成功</li></ul><h2 id="制造控制的感觉"><a href="#制造控制的感觉" class="headerlink" title="制造控制的感觉"></a>制造控制的感觉</h2><p>成功的谈判是哄骗的过程，而不是征服，是说服对方的过程，而不是战胜，最重要的是，成功的谈判是让对方为你工作，主动提出你想要的解决方案。</p><p>一个技巧是，在谈判的过程中，不要直接使用陈述句描述对方的问题，这样会让人有一种被指责的意思，可以直接问对方，你要我怎么做呢？特别是对方的做法把你逼的无奈的时候，你可以这样问他。</p><p>聪明的生意人，即便在谈生意的时候听得懂外语，也会带一名翻译，因为这可以为他争取更多的时间去组织语言与思考。</p><p>不要再谈判中逼迫对方承认你是对的，咄咄逼人的对抗是建设性谈判的敌人。</p><blockquote><p>思维导图</p></blockquote><p><img src="http://pg9xe296o.bkt.clouddn.com/%E5%BC%BA%E5%8A%BF%E8%B0%88%E5%88%A4T.png" alt="思维导图"></p><p>综合来看，这本书10分我给5分的评价，45块钱实在不值。</p><p>首先是作者逻叙事辑不清晰。看完一章的内容，来到章节之后的学习要点，才觉得似乎说的是那么回事，但其实在章节之中的小节里，那些故事与论据都与作者想说明的东西不没有层层相扣的感觉，所以到最后我直接都跳过他说的那些故事，直接看后面的总结了。</p><p>其次，作者谈到了一些技巧和原则，但这远远不够，而且这些内容也不值得花如此多的篇章去说明。<br>️</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://pg9xe296o.bkt.clouddn.com/%E5%BC%BA%E5%8A%BF%E8%B0%88%E5%88%A4%E5%B0%81%E9%9D%A2.jpg&quot; alt=&quot;强势谈判是倾听、发现、而不是用强硬的态度去索取&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我没问题，你没问题，我们一起来解决问题。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="reading" scheme="http://wittyfans.com/categories/reading/"/>
    
    
      <category term="reading" scheme="http://wittyfans.com/tags/reading/"/>
    
  </entry>
  
  <entry>
    <title>记一次倒车事故</title>
    <link href="http://wittyfans.com/writing/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%80%92%E8%BD%A6%E4%BA%8B%E6%95%85.html"/>
    <id>http://wittyfans.com/writing/记一次倒车事故.html</id>
    <published>2018-10-12T03:59:40.000Z</published>
    <updated>2018-10-12T04:15:25.780Z</updated>
    
    <content type="html"><![CDATA[<p>一次车祸，对方索要八百惊吓费，协商无果，一直僵持不下。</p><p>我习惯性的拖延，一直没有明确表态，好像就不需要承担犯错的后果，但其实我错了，不管怎么样，我只有两种选择：</p><ol><li>承担所有损失，意味着我自己很亏，我自己会觉得自己犯了不该这么软弱的错。</li><li>拒绝损失，意味着可能带来的纠纷，即与对方发生冲突</li></ol><p>从别人的视角来说，我因为不愿意付钱，弄的我似乎很没责任感，又不敢明确拒绝对方的无理要求，显的有些软弱被欺负，一是拿不出钱，而是拿不出拒绝对方的勇气。</p><p>生活当中，有许多的场景，比如B的前景更好，但不愿放弃A这边的利益，在其中纠结，害怕犯错，因为不管选择哪一方，都会有损失，而人都不想损失，想鱼和熊掌兼得，想走”中庸之道”。</p><p>聪明的人，能一眼识别出其中的利害关系，做出明智的决定，显然我还差得远。<br>抱着一种随便的态度，但别人不会如此，当对方跟你算账的时候，你只会手忙脚乱。</p><p>再遇到这种突发事件，首先避免鲁莽，冷静三分钟时间（不能太久）分析利害关系</p><p>允许自己去犯错，承担后果，然后果断的直面冲突与错误，事后再反思，总结。</p><p>如果不能有所改变，只会一次次承担更大的损失。这是我的教训，希望对大家有所帮助，能从别人的教训中吸取经验的人，都是会干大事的, 一起成长～ 💪💪💪</p><blockquote><p>PS: 虽然我能理解别人所处的形势，但这并不代表我赞同对方的所作所为。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一次车祸，对方索要八百惊吓费，协商无果，一直僵持不下。&lt;/p&gt;
&lt;p&gt;我习惯性的拖延，一直没有明确表态，好像就不需要承担犯错的后果，但其实我错了，不管怎么样，我只有两种选择：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;承担所有损失，意味着我自己很亏，我自己会觉得自己犯了不该这么软弱的错。&lt;
      
    
    </summary>
    
      <category term="writing" scheme="http://wittyfans.com/categories/writing/"/>
    
    
      <category term="life" scheme="http://wittyfans.com/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>社会契约论手稿</title>
    <link href="http://wittyfans.com/reading/%E7%A4%BE%E4%BC%9A%E5%A5%91%E7%BA%A6%E8%AE%BA%E6%89%8B%E7%A8%BF.html"/>
    <id>http://wittyfans.com/reading/社会契约论手稿.html</id>
    <published>2018-10-08T09:49:30.000Z</published>
    <updated>2018-10-08T09:53:00.398Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>字丑，随便截了个笔记，试试七牛云图片存储的速度。</p></blockquote><a id="more"></a><p><img src="http://pg9xe296o.bkt.clouddn.com/%E7%A4%BE%E4%BC%9A%E5%A5%91%E7%BA%A6%E8%AE%BA.JPG" alt="Write by wittyfans"></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;字丑，随便截了个笔记，试试七牛云图片存储的速度。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="reading" scheme="http://wittyfans.com/categories/reading/"/>
    
    
      <category term="reading" scheme="http://wittyfans.com/tags/reading/"/>
    
  </entry>
  
  <entry>
    <title>Windows CMD命令记录</title>
    <link href="http://wittyfans.com/coding/Windows-CMD%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95.html"/>
    <id>http://wittyfans.com/coding/Windows-CMD命令记录.html</id>
    <published>2018-10-08T08:11:12.000Z</published>
    <updated>2018-10-08T08:25:33.994Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>整理了一下常用的CMD命令 📇</p></blockquote><a id="more"></a><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">D: 进入d盘</span><br><span class="line">dir 列举当前目录的文件，类似linux的ls</span><br><span class="line">md 创建目录</span><br><span class="line">rd 删除目录</span><br><span class="line">echo %PROCESSOR_ARCHITECTURE%查看系统版本位数</span><br><span class="line">set查看系统环境变量</span><br><span class="line">netstat -ano查看开放的端口</span><br><span class="line">netstat -an | find &quot;3389&quot;查看3389开放情况</span><br><span class="line">ipconfig /all查询本机IP段，所在域等</span><br><span class="line">net config Workstation当前计算机名，全名，用户名，系统版本，工作站域，登陆域</span><br><span class="line">net user本机用户列表</span><br><span class="line">net localhroup administrators本机管理员[通常含有域用户]</span><br><span class="line">net user /domain查询域用户</span><br><span class="line">net user 用户名 /domain获取指定用户的账户信息</span><br><span class="line">net user /domain b404 pass修改域内用户密码，需要管理员权限</span><br><span class="line">net group /domain查询域里面的工作组</span><br><span class="line">net group 组名 /domain查询域中的某工作组</span><br><span class="line">net group &quot;domain admins&quot; /domain查询域管理员列表</span><br><span class="line">net group &quot;enterprise admins&quot; /domain获得企业管理员列表</span><br><span class="line">net group 组名 /del /domain删除域中的某组</span><br><span class="line">net group 组名 组成员名 /del /domain删除域中的某组的组成员</span><br><span class="line">net localgroup administrators /domain登录本机的域管理员</span><br><span class="line">net group 组名 /add增加域中的组</span><br><span class="line">net localgroup administrators workgroup\user001 /add域用户添加到本机</span><br><span class="line">net group &quot;domain controllers&quot; /domain查看域控制器(如果有多台)</span><br><span class="line">net time /domain判断主域，主域服务器都做时间服务器</span><br><span class="line">net config workstation当前登录域</span><br><span class="line">net session查看当前会话</span><br><span class="line">net use \\ip\ipc$ pawword /user:username@domain建立IPC会话[空连接-***]</span><br><span class="line">net view \\ip查询某IP共享</span><br><span class="line">net use z: \\192.168.200.21\文件夹名建立映射到本机Z盘</span><br><span class="line">net share查看SMB指向的路径[即共享]</span><br><span class="line">at \\192.168.200.21:50 c:\windows\fuxk.exe在共享主机上执行</span><br><span class="line">net view查询同一域内机器列表</span><br><span class="line">net view /domain查询域列表</span><br><span class="line">net view /domain:test查看test域中计算机列表</span><br><span class="line">net view \\DC的机器名字查看域控共享情况</span><br><span class="line">nltest /domain_trusts获取域信任信息</span><br><span class="line">net session查看当前会话</span><br><span class="line">net start查看当前运行的服务</span><br><span class="line">net time /domain查询主域服务器的时间</span><br><span class="line">net time \\192.168.200.21查看192.168.200.21机器的时间</span><br><span class="line">echo %logonserver%查看登陆到这台服务器的计算机</span><br><span class="line">net accounts查看本地密码策略</span><br><span class="line">net accounts /domain查看域密码策略</span><br><span class="line">nbtstat –A ipnetbios 查询</span><br><span class="line">netstat –an/ano/anb网络连接查询</span><br><span class="line">netsh firewall show config查看防火墙策略</span><br><span class="line">netsh firewall show state查看防火墙策略</span><br><span class="line">route print路由表</span><br><span class="line">tracert IP路由跟踪</span><br><span class="line">arp -a列出本网段内所有活跃的IP地址</span><br><span class="line">arp -s (ip + mac)绑定mac和IP</span><br><span class="line">arp -d (iP + mac)解绑IP和Mac</span><br><span class="line">tasklist /V查看进程[显示对应用户]</span><br><span class="line">tasklist /S ip /U domain\username /P /V查看远程计算机进程列表</span><br><span class="line">psexec \\192.168.200.21 -u administrator -p b404pass -c gsecdump.exe -u从域服务器密码存储文件windows/ntds/ntds.dit导出hash值出来</span><br><span class="line">gsecdump -a获取域登管理员登录过得hash值，这里gescdump为第三方导出AD域的hash值</span><br><span class="line">tasklist /S IP地址 /U 域名\用户名 /P /V查看远程计算机进程</span><br><span class="line">tasklist /svc查看进程</span><br><span class="line">taskkill /im 进程名称(cmd.exe)结束进程</span><br><span class="line">taskkill /pid[进程码]-t(结束该进程) -f(强制结束该进程以及所有子进程)</span><br><span class="line">ping 主机名显示IP</span><br><span class="line">qprocess *类似tasklist</span><br><span class="line">qprocess /SERVER:IP远程查看计算机进程列表</span><br><span class="line">nslookup –qt-MX Yahoo.com查看邮件服务器</span><br><span class="line">whoami /all查询当前用户权限等</span><br><span class="line">set查看系统环境变量</span><br><span class="line">systeminfo查看系统信息</span><br><span class="line">qwinsta查看登录情况</span><br><span class="line">qwinsta /SERVER:IP查看远程登录情况</span><br><span class="line">fsutil fsinfo drives查看所有盘符</span><br><span class="line">gpupdate /force更新域策略</span><br><span class="line">whoami查询账号所属权限</span><br><span class="line">whoami /all查看sid号</span><br><span class="line">wmic bios查看bios信息</span><br><span class="line">wmic qfe查看补丁信息</span><br><span class="line">wmic qfe get hotfixid查看补丁-Patch号，很实用</span><br><span class="line">wmic qfe list full /format:htable &gt; hotfixes.htm详细的补丁安装</span><br><span class="line">wmic share get name,path查看SMB指向路径</span><br><span class="line">wmic startup查看启动项</span><br><span class="line">wmic service查看服务</span><br><span class="line">wmic os查看OS信息</span><br><span class="line">wmic service list brief查看进程服务</span><br><span class="line">wmic process list brief查看进程</span><br><span class="line">wmic startup list brief启动程序信息</span><br><span class="line">wmic product list brief查看安装程序和版本信息（漏洞利用线索）</span><br><span class="line">wmic startup list full识别开机启动的程序</span><br><span class="line">wmic process where(description=&quot;mysqld.exe&quot;)&gt;&gt;mysql.log获取软件安装路径</span><br><span class="line">dir \\DC\SYSVOL /s /a &gt; sysvol.txt列出sysvol日志记录</span><br><span class="line">xcopy \\dc2.backlion.com\sysvol.txt sysvol.txt /i /e /c拷贝sysvol.txt到本地</span><br><span class="line">REG query HKCU /v &quot;pwd&quot; /s获取到存到注册表中的密码</span><br><span class="line">dir /b/s config.*查看所在目录所有前缀为config的文件</span><br><span class="line">findstr /si password *.xml *.ini *.txt查看后缀名文件中含有password关键字的文件</span><br><span class="line">findstr /si login *.xml *.ini *.txt查看后缀名文件中含有login关键字的文件</span><br><span class="line">copy con ftp.bat创建ftp.bat批处理，然后输入ifconfig等命令，按ctr+z退出，并创建成功</span><br><span class="line">copy con test.vbs创建test.vbs脚本，输入脚本后，按ctr+z退出，并创建成功</span><br><span class="line">ASSOC 显示文件扩展对应的程序</span><br><span class="line">cipher 删除文件，但并不立即删除</span><br><span class="line">driverquery -v 显示所有装了的驱动</span><br><span class="line">fc 对比两个文件</span><br><span class="line">netstat -an 显示IP与开放的端口</span><br><span class="line">Tracert、pathping 看路由表</span><br><span class="line">tasklist 正在运行的任务</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://xstarcd.github.io/wiki/windows/windows_cmd_summary_commands.html" target="_blank" rel="noopener">windows_cmd_summary</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;整理了一下常用的CMD命令 📇&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="coding" scheme="http://wittyfans.com/categories/coding/"/>
    
    
      <category term="cmd" scheme="http://wittyfans.com/tags/cmd/"/>
    
      <category term="shell" scheme="http://wittyfans.com/tags/shell/"/>
    
      <category term="windows" scheme="http://wittyfans.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Auto assign ticket with Jira python api</title>
    <link href="http://wittyfans.com/coding/Auto-assign-ticket-with-Jira-python-api.html"/>
    <id>http://wittyfans.com/coding/Auto-assign-ticket-with-Jira-python-api.html</id>
    <published>2018-10-05T14:40:07.000Z</published>
    <updated>2018-10-08T08:23:28.011Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>再也不用担心jira工单超时了 🤟</p></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line">import os</span><br><span class="line">from collections import Counter</span><br><span class="line">from jira import JIRA</span><br><span class="line">from datetime import datetime</span><br><span class="line"></span><br><span class="line"># The notifier function</span><br><span class="line">def run_once(f):</span><br><span class="line">    def wrapper(*args, **kwargs):</span><br><span class="line">        if not wrapper.has_run:</span><br><span class="line">            wrapper.has_run = True</span><br><span class="line">            return f(*args, **kwargs)</span><br><span class="line">    wrapper.has_run = False</span><br><span class="line">    return wrapper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def notify(title, subtitle, message):</span><br><span class="line">    t = &apos;-title &#123;!r&#125;&apos;.format(title)</span><br><span class="line">    s = &apos;-subtitle &#123;!r&#125;&apos;.format(subtitle)</span><br><span class="line">    m = &apos;-message &#123;!r&#125;&apos;.format(message)</span><br><span class="line">    v = &apos;-sound glass&apos;</span><br><span class="line">    os.system(&apos;terminal-notifier &#123;&#125;&apos;.format(&apos; &apos;.join([m, t, s, v])))</span><br><span class="line"></span><br><span class="line">def timer(n):</span><br><span class="line">    print(&quot;初始化&quot;)</span><br><span class="line">    print(&quot;开始监测工单...&quot;)</span><br><span class="line">    jira = JIRA(&apos;你的jira服务器地址&apos;,basic_auth=(&apos;用户名&apos;, &apos;密码&apos;))</span><br><span class="line">    while True:</span><br><span class="line">        tickets = jira.search_issues(&apos;The JQL for search jira ticket，搜索工单的jql&apos;)</span><br><span class="line">        for issue in tickets:</span><br><span class="line">            # jira.assign_issue(issue, &apos;需要assign的用户名&apos;)</span><br><span class="line">            print(&apos;&#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;&apos;.format(issue.key,issue.fields.creator,issue.fields.summary,str(issue.fields.customfield_10208),issue.fields.priority.name))</span><br><span class="line">            notify(title    = &apos;JIRA&apos;,</span><br><span class="line">                   subtitle = issue.key,</span><br><span class="line">                   message  = issue.fields.summary)</span><br><span class="line">            jira.assign_issue(issue, &apos;需要assign的用户名&apos;)</span><br><span class="line">        time.sleep(n)</span><br><span class="line">timer(120)</span><br></pre></td></tr></table></figure><ul><li>使用之前，需要先安装相关的包（主要是jira），使用pip安装即可</li><li>在Mac OS上运行，将会有通知提示，提示音都可以自定义，如果在windows上运行，将<em> The notifier function</em>函数和相关语句删除即可</li><li>timer（120），每隔120S请求一次数据，可以自定义</li><li>可以自定义一个userlist，实现多个assigner自动、随机分配</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;再也不用担心jira工单超时了 🤟&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="coding" scheme="http://wittyfans.com/categories/coding/"/>
    
    
      <category term="jira" scheme="http://wittyfans.com/tags/jira/"/>
    
      <category term="HelpDesk" scheme="http://wittyfans.com/tags/HelpDesk/"/>
    
      <category term="python" scheme="http://wittyfans.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell Encrypting Credentials Generator</title>
    <link href="http://wittyfans.com/coding/PowerShell-Encrypting-Credentials-Generator.html"/>
    <id>http://wittyfans.com/coding/PowerShell-Encrypting-Credentials-Generator.html</id>
    <published>2018-10-05T14:11:51.000Z</published>
    <updated>2018-10-08T15:02:58.950Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用PowerShell运行，输入密码，生存的String会自动复制到剪贴板，直接去需要的地方粘贴即可。</p></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Add-Type -AssemblyName System.Windows.Forms</span><br><span class="line"></span><br><span class="line">function Read-MessageBoxDialog</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    param ([string]$Message,</span><br><span class="line"></span><br><span class="line">        [string]$WindowTitle,</span><br><span class="line"></span><br><span class="line">        [System.Windows.Forms.MessageBoxButtons]$Buttons = [System.Windows.Forms.MessageBoxButtons]::OK,</span><br><span class="line"></span><br><span class="line">        [System.Windows.Forms.MessageBoxIcon]$Icon = [System.Windows.Forms.MessageBoxIcon]::None)</span><br><span class="line"></span><br><span class="line">    Add-Type -AssemblyName System.Windows.Forms</span><br><span class="line"></span><br><span class="line">    return [System.Windows.Forms.MessageBox]::Show($Message, $WindowTitle, $Buttons, $Icon)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">write-host &quot;请输入原始密码：↓↓↓↓&quot;</span><br><span class="line">$inputPWD = Read-Host | ConvertTo-SecureString -AsPlainText -Force</span><br><span class="line">$encryptedPWD = $inputPWD | ConvertFrom-SecureString</span><br><span class="line">[Windows.Forms.Clipboard]::SetText($encryptedPWD)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Read-MessageBoxDialog -Message &quot;已拷贝到剪贴板&quot; -WindowTitle &quot;安全密码制作工具&quot; -Buttons OK -Icon Information</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;使用PowerShell运行，输入密码，生存的String会自动复制到剪贴板，直接去需要的地方粘贴即可。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="coding" scheme="http://wittyfans.com/categories/coding/"/>
    
    
      <category term="HelpDesk" scheme="http://wittyfans.com/tags/HelpDesk/"/>
    
      <category term="PowerShell" scheme="http://wittyfans.com/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>Groovy Jira 笔记</title>
    <link href="http://wittyfans.com/coding/Groovy-Jira-%E7%AC%94%E8%AE%B0.html"/>
    <id>http://wittyfans.com/coding/Groovy-Jira-笔记.html</id>
    <published>2018-10-05T13:56:12.000Z</published>
    <updated>2018-10-05T13:59:33.605Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Groovy是一门Java系的脚本语言，在Jira系统中，配合ScriptRunner，可以对Jira的ticket实现非常高级的自动化功能。</p></blockquote><a id="more"></a><p>Groovy 笔记</p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><ul><li>byte</li><li>char</li><li>short</li><li>int</li><li>long</li><li>java.lang.BigInteger</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// primitive types</span><br><span class="line">byte  b = 1</span><br><span class="line">char  c = 2</span><br><span class="line">short s = 3</span><br><span class="line">int   i = 4</span><br><span class="line">long  l = 5</span><br><span class="line"></span><br><span class="line">// infinite precision</span><br><span class="line">BigInteger bi =  6</span><br><span class="line"></span><br><span class="line">//布尔</span><br><span class="line"></span><br><span class="line">def myBooleanVariable = true</span><br><span class="line">boolean untypedBooleanVar = false</span><br></pre></td></tr></table></figure><h1 id="List"><a href="#List" class="headerlink" title="List"></a>List</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def numbers = [1, 2, 3]         </span><br><span class="line"></span><br><span class="line">assert numbers instanceof List  </span><br><span class="line">assert numbers.size() == 3</span><br></pre></td></tr></table></figure><h1 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String[] arrStr = [&apos;Ananas&apos;, &apos;Banana&apos;, &apos;Kiwi&apos;]</span><br><span class="line">def numArr = [1, 2, 3] as int[]      </span><br><span class="line">def matrix3 = new Integer[3][3]</span><br></pre></td></tr></table></figure><h1 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">def colors = [red: &apos;#FF0000&apos;, green: &apos;#00FF00&apos;, blue: &apos;#0000FF&apos;]   </span><br><span class="line"></span><br><span class="line">assert colors[&apos;red&apos;] == &apos;#FF0000&apos;    </span><br><span class="line">assert colors.green  == &apos;#00FF00&apos;    </span><br><span class="line"></span><br><span class="line">colors[&apos;pink&apos;] = &apos;#FF00FF&apos;           </span><br><span class="line">colors.yellow  = &apos;#FFFF00&apos;           </span><br><span class="line"></span><br><span class="line">assert colors.pink == &apos;#FF00FF&apos;</span><br><span class="line">assert colors[&apos;yellow&apos;] == &apos;#FFFF00&apos;</span><br><span class="line"></span><br><span class="line">assert colors instanceof java.util.LinkedHashMap</span><br></pre></td></tr></table></figure><h1 id="打印"><a href="#打印" class="headerlink" title="打印"></a>打印</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">println &quot;Hello World!&quot;</span><br><span class="line"></span><br><span class="line">def name = &apos;Guillaume&apos; // a plain string</span><br><span class="line">def greeting = &quot;Hello $&#123;name&#125;&quot;</span><br><span class="line"></span><br><span class="line">assert greeting.toString() == &apos;Hello Guillaume&apos;</span><br></pre></td></tr></table></figure><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/* a standalone multiline comment</span><br><span class="line">   spanning two lines */</span><br></pre></td></tr></table></figure><h1 id="一切都是对象"><a href="#一切都是对象" class="headerlink" title="一切都是对象"></a>一切都是对象</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def message = 12</span><br><span class="line">println message.class</span><br></pre></td></tr></table></figure><h1 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for(i = 0; i &lt; 5; i++)&#123;</span><br><span class="line">  println val</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="范围"><a href="#范围" class="headerlink" title="范围"></a>范围</h1><blockquote><p>范围是一系列的值。例如 “0..4” 表明包含 整数 0、1、2、3、4。Groovy 还支持排除范围，“0..&lt;4” 表示 0、1、2、3。还可以创建字符范围：“a..e” 相当于 a、b、c、d、e。”a..&lt;e”包括小于 e 的所有值.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for(i in 0..5)&#123;</span><br><span class="line">  println val</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="设置默认参数"><a href="#设置默认参数" class="headerlink" title="设置默认参数"></a>设置默认参数</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">def repeat(val, repeat=5)&#123;</span><br><span class="line"> for(i in 0..&lt;repeat)&#123;</span><br><span class="line">  println val</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">def range = 0..4</span><br><span class="line">println range.class</span><br></pre></td></tr></table></figure><blockquote><p>每个 Groovy 集合都是 java.util.Collection 或 java.util.Map 的实例。</p></blockquote><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def coll = [&quot;Groovy&quot;, &quot;Java&quot;, &quot;Ruby&quot;]</span><br><span class="line">coll.add(&quot;Python&quot;)</span><br><span class="line">coll &lt;&lt; &quot;Smalltalk&quot;</span><br><span class="line">return coll</span><br></pre></td></tr></table></figure><h1 id="获取Issue"><a href="#获取Issue" class="headerlink" title="获取Issue"></a>获取Issue</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import com.atlassian.jira.issue.Issue</span><br><span class="line">import com.atlassian.jira.issue.ModifiedValue</span><br><span class="line">import com.atlassian.jira.issue.util.DefaultIssueChangeHolder</span><br><span class="line">import com.atlassian.jira.component.ComponentAccessor</span><br><span class="line"></span><br><span class="line">def issueManager = ComponentAccessor.getIssueManager()</span><br><span class="line">def issue = issueManager.getIssueObject(&quot;AM-17&quot;)</span><br></pre></td></tr></table></figure><p>AM-17为issue的key.</p><h1 id="类型检查"><a href="#类型检查" class="headerlink" title="类型检查"></a>类型检查</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A.class</span><br></pre></td></tr></table></figure><h1 id="获取issue和customerField"><a href="#获取issue和customerField" class="headerlink" title="获取issue和customerField"></a>获取issue和customerField</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import com.atlassian.jira.issue.Issue</span><br><span class="line">import com.atlassian.jira.issue.ModifiedValue</span><br><span class="line">import com.atlassian.jira.issue.util.DefaultIssueChangeHolder</span><br><span class="line">import com.atlassian.jira.component.ComponentAccessor</span><br><span class="line">def issueManager = ComponentAccessor.getIssueManager()</span><br><span class="line">def issue = issueManager.getIssueObject(&quot;AM-17&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def String myval = &quot;my new text&quot;</span><br><span class="line"></span><br><span class="line">def customFieldManager = ComponentAccessor.getCustomFieldManager()</span><br><span class="line">def textCf2 = customFieldManager.getCustomFieldObjects(issue).find&#123;it.name == &quot;Assigned Group&quot;&#125;</span><br><span class="line">def assignGroupValue = issue.getCustomFieldValue(textCf2)</span><br><span class="line"></span><br><span class="line">return assignGroupValue.class</span><br><span class="line"></span><br><span class="line">// Change the value of customerField</span><br><span class="line">//if (textCf2) &#123;</span><br><span class="line">  //  def changeHolder = new DefaultIssueChangeHolder()</span><br><span class="line">    //textCf2.updateValue(null, issue, new ModifiedValue(issue.getCustomFieldValue(textCf2), myval),changeHolder)</span><br><span class="line">//&#125;</span><br></pre></td></tr></table></figure><h1 id="获取分类"><a href="#获取分类" class="headerlink" title="获取分类"></a>获取分类</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">import com.atlassian.jira.issue.*</span><br><span class="line">import com.atlassian.jira.component.ComponentAccessor</span><br><span class="line">import com.atlassian.jira.issue.CustomFieldManager</span><br><span class="line">import java.lang.String</span><br><span class="line"></span><br><span class="line">def category = [:]</span><br><span class="line"></span><br><span class="line">category[&quot;account management&quot;] = [</span><br><span class="line">    &quot;sap ess account-unlock/passwordreset&quot;,</span><br><span class="line">    &quot;fiori account-unlock/passwordreset&quot;,</span><br><span class="line">    &quot;much account-unlock/passwordreset&quot;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">category[&quot;helpdesk cn&quot;] = [</span><br><span class="line">    &quot;windows account-unlock/passwordreset&quot;,</span><br><span class="line">    &quot;homer account-unlock/passwordreset&quot;,</span><br><span class="line">    &quot;wde account-unlock/passwordreset&quot;,</span><br><span class="line">    &quot;other access&quot;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">def getCategory(Map&lt;String,List&gt; category,String type)&#123;</span><br><span class="line">    lowerCaseType = type.toLowerCase()</span><br><span class="line">    for (i in category)&#123;</span><br><span class="line">        for(j in i.value)&#123;</span><br><span class="line">            if (lowerCaseType == j.toString())&#123;</span><br><span class="line">                return i.key</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                return &apos;error category&apos;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ScriptRunner中log信息"><a href="#ScriptRunner中log信息" class="headerlink" title="ScriptRunner中log信息"></a>ScriptRunner中log信息</h1><blockquote><p>See also <a href="https://mraddon.blog/2015/05/27/configure-groovy-scriptrunner-logs/" target="_blank" rel="noopener">ScriptRunner Log intro</a> </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.log4j.Category</span><br><span class="line"> </span><br><span class="line">def Category log = Category.getInstance(&quot;com.onresolve.jira.groovy&quot;)</span><br><span class="line">log.setLevel(org.apache.log4j.Level.DEBUG)</span><br><span class="line">log.debug &quot;debug statements&quot;</span><br></pre></td></tr></table></figure><h1 id="自动根据标题确定分类"><a href="#自动根据标题确定分类" class="headerlink" title="自动根据标题确定分类"></a>自动根据标题确定分类</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">import com.atlassian.jira.component.ComponentAccessor</span><br><span class="line">import com.atlassian.jira.issue.CustomFieldManager</span><br><span class="line">import com.atlassian.jira.issue.fields.CustomField</span><br><span class="line">import com.atlassian.jira.ComponentManager</span><br><span class="line">import com.atlassian.jira.issue.customfields.manager.OptionsManager</span><br><span class="line">import org.apache.log4j.Category</span><br><span class="line"></span><br><span class="line">// log config</span><br><span class="line">def Category log = Category.getInstance(&quot;com.onresolve.jira.groovy&quot;)</span><br><span class="line">log.setLevel(org.apache.log4j.Level.INFO)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def category = [:]</span><br><span class="line">category[&quot;Account Management&quot;] = [</span><br><span class="line">    &quot;SAP ESS Account-Unlock/PasswordReset&quot;,</span><br><span class="line">    &quot;Fiori Account-Unlock/PasswordReset&quot;,</span><br><span class="line">    &quot;MUCH Account-Unlock/PasswordReset&quot;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">category[&quot;Helpdesk CN&quot;] = [</span><br><span class="line">    &quot;Windows Account-Unlock/PasswordReset&quot;,</span><br><span class="line">    &quot;Homer Account-Unlock/PasswordReset&quot;,</span><br><span class="line">    &quot;WDE Account-Unlock/PasswordReset&quot;,</span><br><span class="line">    &quot;Password Reset - Other Access&quot;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">def getCategory(Map&lt;String,List&gt; category,String type)&#123;</span><br><span class="line">    def upperType = type.toUpperCase()</span><br><span class="line">    for (i in category)&#123;</span><br><span class="line">        for(j in i.value)&#123;</span><br><span class="line">            def catItem = j.toString().toUpperCase()</span><br><span class="line">            if (upperType == catItem)&#123;</span><br><span class="line">                return i.key</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="更新CustomerField"><a href="#更新CustomerField" class="headerlink" title="更新CustomerField"></a>更新CustomerField</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import com.atlassian.jira.component.ComponentAccessor</span><br><span class="line">import com.atlassian.jira.issue.CustomFieldManager</span><br><span class="line">import com.atlassian.jira.issue.util.DefaultIssueChangeHolder</span><br><span class="line">import com.atlassian.jira.issue.ModifiedValue</span><br><span class="line">import com.atlassian.crowd.embedded.api.Group</span><br><span class="line"></span><br><span class="line">//get Issue</span><br><span class="line">def issueManager = ComponentAccessor.getIssueManager()</span><br><span class="line">def am120 = issueManager.getIssueObject(&quot;AM-120&quot;)</span><br><span class="line"></span><br><span class="line">// get CustomerField Manager</span><br><span class="line">def customFieldManager = ComponentAccessor.getCustomFieldManager()</span><br><span class="line"></span><br><span class="line">//get groupManager</span><br><span class="line">def groupManager = ComponentAccessor.getGroupManager()</span><br><span class="line"></span><br><span class="line">//get issue&apos;s group</span><br><span class="line">def textCf2 = customFieldManager.getCustomFieldObjects(am120).find &#123;it.name == &quot;Assigned Group&quot;&#125;</span><br><span class="line"></span><br><span class="line">//create a group object</span><br><span class="line">def hdcn = groupManager.getGroup(&quot;HelpDesk CN&quot;)</span><br><span class="line"></span><br><span class="line">// set group&apos;s value</span><br><span class="line"></span><br><span class="line">if (textCf2) &#123;</span><br><span class="line">    def changeHolder = new DefaultIssueChangeHolder()</span><br><span class="line">    textCf2.updateValue(null, am120, new ModifiedValue(am120.getCustomFieldValue(textCf2), [hdcn]),changeHolder)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="设置Components"><a href="#设置Components" class="headerlink" title="设置Components"></a>设置Components</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">import com.atlassian.jira.component.ComponentAccessor</span><br><span class="line">import com.atlassian.jira.issue.CustomFieldManager</span><br><span class="line">import com.atlassian.jira.issue.fields.CustomField</span><br><span class="line">import com.atlassian.jira.ComponentManager</span><br><span class="line">import com.atlassian.jira.issue.util.DefaultIssueChangeHolder</span><br><span class="line">import com.atlassian.jira.issue.ModifiedValue</span><br><span class="line">import com.atlassian.crowd.embedded.api.Group</span><br><span class="line">import com.atlassian.jira.project.Project </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def category = [:]</span><br><span class="line">category[&quot;SAP&quot;] = [</span><br><span class="line">    &quot;SAP ESS Account-Unlock/PasswordReset&quot;,</span><br><span class="line">    &quot;Fiori Account-Unlock/PasswordReset&quot;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">category[&quot;IT Helpdesk&quot;] = [</span><br><span class="line">    &quot;Windows Account-Unlock/PasswordReset&quot;,</span><br><span class="line">    &quot;Homer Account-Unlock/PasswordReset&quot;,</span><br><span class="line">    &quot;WDE Account-Unlock/PasswordReset&quot;,</span><br><span class="line">    &quot;Password Reset - Other Access&quot;,</span><br><span class="line">    &quot;MUCH Account-Unlock/PasswordReset&quot;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">def getCategory(Map&lt;String,List&gt; category,String type)&#123;</span><br><span class="line">    def upperType = type.toUpperCase()</span><br><span class="line">    for (i in category)&#123;</span><br><span class="line">        for(j in i.value)&#123;</span><br><span class="line">            def catItem = j.toString().toUpperCase()</span><br><span class="line">            if (upperType == catItem)&#123;</span><br><span class="line">                return i.key</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def issueManager = ComponentAccessor.getIssueManager()</span><br><span class="line">def issue = issueManager.getIssueObject(&quot;AM-122&quot;)</span><br><span class="line">def comCat = getCategory(category,issue.getSummary())</span><br><span class="line">Project project = issue.getProjectObject()</span><br><span class="line">def component = ComponentAccessor.getProjectComponentManager().findByComponentName(project.getId(),comCat.toString())</span><br><span class="line">issue.setComponent([component]);</span><br></pre></td></tr></table></figure><h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Groovy是一门Java系的脚本语言，在Jira系统中，配合ScriptRunner，可以对Jira的ticket实现非常高级的自动化功能。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="coding" scheme="http://wittyfans.com/categories/coding/"/>
    
    
      <category term="HelpDesk" scheme="http://wittyfans.com/tags/HelpDesk/"/>
    
      <category term="Jira" scheme="http://wittyfans.com/tags/Jira/"/>
    
      <category term="Groovy" scheme="http://wittyfans.com/tags/Groovy/"/>
    
  </entry>
  
  <entry>
    <title>卓越商业街领袖都是「教育家」- 文摘</title>
    <link href="http://wittyfans.com/reading/%E5%8D%93%E8%B6%8A%E5%95%86%E4%B8%9A%E8%A1%97%E9%A2%86%E8%A2%96%E9%83%BD%E6%98%AF%E3%80%8C%E6%95%99%E8%82%B2%E5%AE%B6%E3%80%8D-%E6%96%87%E6%91%98.html"/>
    <id>http://wittyfans.com/reading/卓越商业街领袖都是「教育家」-文摘.html</id>
    <published>2018-06-08T14:38:58.000Z</published>
    <updated>2018-06-08T14:41:24.335Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>你也可以学习这种明星管理者的方法，你只需要知道教什么，何时教，以及如何延续你的成功经验即可。</p></blockquote><a id="more"></a><h1 id="卓越领袖的教学方式"><a href="#卓越领袖的教学方式" class="headerlink" title="卓越领袖的教学方式"></a>卓越领袖的教学方式</h1><ul><li>不管是什么事情，不管在每天工作、当面还是隔着屏幕，他们把每一天都当作教学的机会，为他们提供个性化专业管理课程。</li><li>他们明白、个性化辅导方式不仅有助于提高员工能力和遵守规则的意识，还帮助员工掌握技能，学会独立思考和行动。</li><li>奋斗在一线，亲身传授专业技能，常用策略，商业准则和生活经验。</li><li>他们的教学方式是非正式、渐进式、而且有实际效果的。</li></ul><h1 id="卓越领袖的「经验」"><a href="#卓越领袖的「经验」" class="headerlink" title="卓越领袖的「经验」"></a>卓越领袖的「经验」</h1><ul><li>如何以恰当的方式，给下属有建设性意义的辅导？教导他们的时候，还要尊重其独立性？</li><li>每天都可以进行考试，一旦员工做的不对，就可以亲自展示正确的做法。</li><li>卓越领导者的工作当然不仅仅是教导员工如何工作，他们还与员工分享深刻的人生哲理，这似乎超过了工作的范畴，但对管理者来说，是极其有用的沟通方法。</li></ul><blockquote><p>我研究的杰出领导者平常都会和员工一起奋斗在一线，亲身传授专业技能、常用策略、商业准则和生活经验。</p></blockquote><ul><li>他们都会选择最佳的教学时机，这和教学内容一样重要。</li><li>采用开放式办公，以便近距离观察员工、项目进展、同时鼓励员工多与他沟通有助于抓住并创造传道授业的机会。</li><li>个性化指导需要了解个人的学习背景，调整教学和辅导内容，对下属的指导要与其独特需求、个性、和发展轨迹保持一致。</li><li>要善于给出有针对性的建议，对有些人来说，言语上的激励就能让人做的很好，而对于另外一些人来说，让他们感到不适才是才是激励他们的方式。</li><li>像苏格拉底那样问问题，尝试一些尖锐、中肯的问题，这样下属自己的认知往往也会加强，这也是一种教育的探索方式。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;你也可以学习这种明星管理者的方法，你只需要知道教什么，何时教，以及如何延续你的成功经验即可。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="reading" scheme="http://wittyfans.com/categories/reading/"/>
    
    
      <category term="LeaderShip" scheme="http://wittyfans.com/tags/LeaderShip/"/>
    
  </entry>
  
  <entry>
    <title>kafka分布式集群部署</title>
    <link href="http://wittyfans.com/coding/kafka%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.html"/>
    <id>http://wittyfans.com/coding/kafka分布式集群部署.html</id>
    <published>2018-06-08T03:13:19.000Z</published>
    <updated>2018-06-08T03:17:50.893Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一个高吞吐量的消息队列系统，可以达到高效的流处理，借助zookeeper确保了证数据的安全。</p></blockquote><a id="more"></a><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">下载官网 kafka.2.10-0.8.2.1.tgz 版本</span><br></pre></td></tr></table></figure><h1 id="kafka集群配置"><a href="#kafka集群配置" class="headerlink" title="kafka集群配置"></a>kafka集群配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 传输数据到集群 -&gt; scp -r ***.tgz opt/software/</span><br><span class="line"># 解压 -&gt; /opt/modules</span><br><span class="line"># 配置</span><br><span class="line"></span><br><span class="line">1. Server.propertis文件</span><br><span class="line">-&gt; broker.id -&gt; 1或则2，nod1 -&gt; 1,node2 -&gt; 2</span><br><span class="line">-&gt; port=9092</span><br><span class="line">-&gt; host.name -&gt; userhostname</span><br><span class="line">-&gt; 修改日志路径 -&gt; log.dirs = /tmp/kafka-logs</span><br><span class="line">-&gt; zookeeper.connect=master,node1,node2;</span><br><span class="line">2. 分发到其他机器</span><br><span class="line"></span><br><span class="line">3. 修改其他机器上的server.properties文件</span><br></pre></td></tr></table></figure><h1 id="启动并测试"><a href="#启动并测试" class="headerlink" title="启动并测试"></a>启动并测试</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. bin/zookeeper-server-start.sh config/zookeeper.properties</span><br><span class="line">2. bin/kafka-server-start.sh config/server.properties</span><br><span class="line">3. 创建 Topic -&gt; &gt; bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test</span><br><span class="line">4. 创建生产端和消费端</span><br><span class="line">-&gt; bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test</span><br><span class="line">-&gt; bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test --from-beginning</span><br></pre></td></tr></table></figure><p>创建好了的topic可以在zookeeper的目录下的brokers/topics里面去查看。</p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><ul><li>host.name要改成跟本机对应的hostname,才能在第二、三台机器上启动server</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://kafka.apache.org/quickstart" target="_blank" rel="noopener">Kafka QuickStart</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一个高吞吐量的消息队列系统，可以达到高效的流处理，借助zookeeper确保了证数据的安全。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="coding" scheme="http://wittyfans.com/categories/coding/"/>
    
    
      <category term="BigData" scheme="http://wittyfans.com/tags/BigData/"/>
    
      <category term="Kafka" scheme="http://wittyfans.com/tags/Kafka/"/>
    
  </entry>
  
  <entry>
    <title>iOS 12更新Beta开发版配置文件</title>
    <link href="http://wittyfans.com/coding/iOS-12%E6%9B%B4%E6%96%B0Beta%E5%BC%80%E5%8F%91%E7%89%88%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html"/>
    <id>http://wittyfans.com/coding/iOS-12更新Beta开发版配置文件.html</id>
    <published>2018-06-05T05:35:52.000Z</published>
    <updated>2018-06-05T05:38:19.168Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>昨晚苹果发布了iOS 12，相信各位小伙伴已经等不及要更新了吧？让我来教你怎么尝鲜最新的iOS 12</p></blockquote><a id="more"></a><p>iOS Beta 开发版配置文件更新指南</p><p>我很早就加入了苹果的 <em>Apple Beta Software Program</em>，早上第一时间去苹果的 <em>Beta</em> <a href="https://beta.apple.com/sp/betaprogram/redemption#iosdownload" target="_blank" rel="noopener">网址</a>下载，安装描述文件，按照提示：</p><blockquote><p>will automatically receive the latest public beta software over the air.</p></blockquote><p>说很快就会有空中升级推送，但等了很久没反应，于是立马去Google了其他的办法。</p><h1 id="首先备份"><a href="#首先备份" class="headerlink" title="首先备份"></a>首先备份</h1><p>Beta版的系统，会有很多的Bug，只适合尝鲜，建议先进行备份，可以在手机上云备份或者备份到电脑。</p><h1 id="下载描述文件"><a href="#下载描述文件" class="headerlink" title="下载描述文件"></a>下载描述文件</h1><p>这个官网的描述文件半天不起作用，我在网上找了一个，进入下面这个网址</p><ul><li><a href="https://beta.thuthuatios.com/en/" target="_blank" rel="noopener">苹果 Beta 软件更新下载地址</a></li></ul><p>这个网页里面，有iOS、手表、Mac的系统，这个描述文件会不定期更新，应该是不可以直接复制下载地址去分享的。</p><p>选择相应的系统，点击DownLoad就可以了，然后安装这个描述文件，如果之前安装过，记得先卸载之前的。</p><p>重启你的iPhone，进入设置-&gt;通用-&gt;软件更新-&gt;</p><p>就可以看到iOS12的更新了，然后点击更新就可以啦。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;昨晚苹果发布了iOS 12，相信各位小伙伴已经等不及要更新了吧？让我来教你怎么尝鲜最新的iOS 12&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="coding" scheme="http://wittyfans.com/categories/coding/"/>
    
    
      <category term="iOS" scheme="http://wittyfans.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Windows自动化AutoIT动手玩</title>
    <link href="http://wittyfans.com/coding/Windows%E8%87%AA%E5%8A%A8%E5%8C%96AutoIT%E5%8A%A8%E6%89%8B%E7%8E%A9.html"/>
    <id>http://wittyfans.com/coding/Windows自动化AutoIT动手玩.html</id>
    <published>2018-06-03T08:40:29.000Z</published>
    <updated>2018-06-03T08:44:18.776Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>AutoID 是一个 Windows 上的一个而自动化软件。可以实现模拟键盘按键、鼠标移动、对窗口的控制，采用类似Basic的语言，很简单，写好之后还可以发布成exe程序，工作中很多机械的步骤终于可以一键搞定了。</p></blockquote><a id="more"></a><h1 id="windows-自动化动手玩"><a href="#windows-自动化动手玩" class="headerlink" title="windows 自动化动手玩"></a>windows 自动化动手玩</h1><p>惯例，来一个HelloWord！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">; 这是我的第一个脚本</span><br><span class="line">MsgBox(0, &quot;我的第一个脚本!&quot;, &quot;Hello World!&quot;)</span><br></pre></td></tr></table></figure><p>; 是注释，相当于其他语言中的 //</p><p>这个语句也可以使用函数来调用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">; 这是我的第二个脚本 (使用函数)</span><br><span class="line">MsgBox(0, &quot;我的第二个脚本!&quot;, &quot;主脚本: Hello!&quot;)</span><br><span class="line">TestFunc()</span><br><span class="line"></span><br><span class="line">Func TestFunc()</span><br><span class="line">    MsgBox(0, &quot;我的第二个脚本!&quot;, &quot;主脚本: Hello!&quot;)</span><br><span class="line">EndFunc</span><br></pre></td></tr></table></figure><h1 id="识别窗口"><a href="#识别窗口" class="headerlink" title="识别窗口"></a>识别窗口</h1><p>通常我们在窗口上, 能看到的东西大多都是以下控件的一种: 按钮, 列表框, 文本编辑框, 静态文本等. AutoIT可以根据窗口的标题，甚至是内部的文字去识别窗口，进而该应用程序交互，例如，给在记事本中输入一段字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ControlSend(&quot;无标题 - 记事本&quot;, &quot;&quot;,&quot;[CLASS:Edit; INSTANCE:1]&quot;,&quot;This is some text&quot;)</span><br></pre></td></tr></table></figure><p>点击一个窗口中，ID名为254的控件，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ControlClick(&quot;我的窗口&quot;, &quot;&quot;,&quot;[ID:254]&quot;)</span><br></pre></td></tr></table></figure><p>为了避免找窗口出错，AutoIT还特地给我们开发了一个识别工具，只要按住Finder Tool中的小球拖到指定窗口上，这个窗口的所有信息都会显示出来，很贴心。</p><p>比如，我首先要运行一个程序(比如记事本)，那么直接输入:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Run(&quot;notepad.exe&quot;)</span><br></pre></td></tr></table></figure><p>然后等它启动完成，也就是属于active状态(这一步的untitled - Notepad) 可以通过autoIT的工具获得，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WinWaitActive(&quot;Untitled - Notepad&quot;)</span><br></pre></td></tr></table></figure><p>然后直接把 <em>ctr+c</em> 复制过来的东西放进来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$text = ClipGet()</span><br><span class="line">Send($text)</span><br></pre></td></tr></table></figure><p>这样就会在记事本文件中输入你复制过来的文字啦，是不是很简单？如果是那些需要点击的操作，你也可以通过自带的工具获取按钮的id，或者是类名与实例的组合，然后通过ControlClick方法去点击，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ControlClick(&quot;A&quot;,&quot;&quot;,&quot;[CLASS:classname; INSTANCE:1]&quot;)</span><br></pre></td></tr></table></figure><blockquote><p>点击窗口名为A中，类名下实例号码为1的区域</p></blockquote><p>然后当我们输入完成之后，就要对数据进行保存啦。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WinClose(&quot;Untitled - Notepad&quot;) -&gt; 关掉名为 Untitled - Notepad 的窗口</span><br><span class="line">WinWaitActive(&quot;Notepad&quot;, &quot;Do you want to save&quot;) -&gt; 等待确认窗口的出现</span><br><span class="line">Send(&quot;!n&quot;) -&gt; 点击确定</span><br></pre></td></tr></table></figure><p>需要注意的是，如果你要输出数据，不可以使用A(int)+B(string)的方式，AutoIT会自动对数据进行处理，所以如果你是想要把两个数据按文本结合，你需要使用 <em>&amp;</em> 这个join符号。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;AutoID 是一个 Windows 上的一个而自动化软件。可以实现模拟键盘按键、鼠标移动、对窗口的控制，采用类似Basic的语言，很简单，写好之后还可以发布成exe程序，工作中很多机械的步骤终于可以一键搞定了。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="coding" scheme="http://wittyfans.com/categories/coding/"/>
    
    
      <category term="HelpDesk" scheme="http://wittyfans.com/tags/HelpDesk/"/>
    
      <category term="windows" scheme="http://wittyfans.com/tags/windows/"/>
    
      <category term="自动化" scheme="http://wittyfans.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
      <category term="效率" scheme="http://wittyfans.com/tags/%E6%95%88%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>初探HBase</title>
    <link href="http://wittyfans.com/coding/%E5%88%9D%E6%8E%A2HBase.html"/>
    <id>http://wittyfans.com/coding/初探HBase.html</id>
    <published>2018-06-03T08:38:26.000Z</published>
    <updated>2018-06-03T08:39:39.808Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>BigData学习历程之HBase部分。</p></blockquote><a id="more"></a><p>初探 HBase</p><h1 id="HBase能做什么？"><a href="#HBase能做什么？" class="headerlink" title="HBase能做什么？"></a>HBase能做什么？</h1><ol><li>海量数据存储，百万、百亿级别的列与行</li><li>数据量非常大的时候，能非常快速的准实时查询</li></ol><h1 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h1><ol><li>交通、比如船只、车辆的GPS信息</li><li>金融、比如取款、交易、信息</li><li>电商、比如浏览日志、物流</li><li>电话、短信、通话记录等</li></ol><h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><ul><li>容量大，HBase面向列，它的列是动态增加的</li><li>多版本，每一个列的数据可以有多个版本</li><li>稀疏性，空列并不占用存储空间，表可以设计的非常稀疏</li><li>扩展性，底层是依赖于HDFS的，也就是说如果存储空间不够，增加DataNOde就可以了</li><li>高可靠性，依赖HDFS的副本机制</li><li>高性能、LSM数据结构和Rowkey有序排列的架构的独特设计，使得它具有非常高的写入性能</li></ul><h1 id="体系与设计模型"><a href="#体系与设计模型" class="headerlink" title="体系与设计模型"></a>体系与设计模型</h1><h2 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h2><table><thead><tr><th style="text-align:left">列簇1</th><th style="text-align:left"></th><th style="text-align:left">列簇2</th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:left">列1</td><td style="text-align:left">列2</td><td style="text-align:left">列3</td><td style="text-align:left">列4</td></tr><tr><td style="text-align:left">x</td><td style="text-align:left">x</td><td style="text-align:left">x</td><td style="text-align:left">x</td></tr><tr><td style="text-align:left">x</td><td style="text-align:left">x</td><td style="text-align:left">x</td><td style="text-align:left">x</td></tr></tbody></table><p>在HBase的数据模型中：</p><ol><li>一张表的列簇不会超过五个</li><li>每个列簇中的列书没有限制</li><li>列只有插入数据后存在，是动态增加的</li><li>列在列簇中是有序的</li></ol><h2 id="与关系数据库的对比"><a href="#与关系数据库的对比" class="headerlink" title="与关系数据库的对比"></a>与关系数据库的对比</h2><table><thead><tr><th style="text-align:left">HBase</th><th style="text-align:left">关系数据库</th></tr></thead><tbody><tr><td style="text-align:left">列动态增加</td><td style="text-align:left">不支持</td></tr><tr><td style="text-align:left">数据自动切分</td><td style="text-align:left">不支持</td></tr><tr><td style="text-align:left">高并发读写</td><td style="text-align:left">不支持</td></tr><tr><td style="text-align:left">不支持条件查询</td><td style="text-align:left">支持</td></tr></tbody></table><h1 id="设计模型"><a href="#设计模型" class="headerlink" title="设计模型"></a>设计模型</h1><h2 id="表结构"><a href="#表结构" class="headerlink" title="表结构"></a>表结构</h2><table><thead><tr><th style="text-align:left">列簇1</th><th style="text-align:left"></th><th style="text-align:left"></th><th style="text-align:left">列簇2</th><th style="text-align:left"></th><th></th><th>列簇3</th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left">col</td><td style="text-align:left">col</td><td style="text-align:left">col</td><td style="text-align:left">col</td><td style="text-align:left">col</td><td>col</td><td>col</td><td>col</td><td>col</td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td></td><td></td><td></td><td></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td><td></td><td></td><td></td></tr></tbody></table><p>col在创建的时候，是不需要指定的，只需要指定列簇。</p><h1 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h1><p>把安装文件放到 <em>opt/softwares/</em> 下面。<em> chmod U+X</em> 更改权限。</p><p>再解压到 <em>modules</em> 目录下:</p><p><em>tar -zxf filename</em></p><p>检查一下系统空间 <em>df</em></p><p>在HBase中，有一个Region的划分，可以把他理解为关系数据库中的分区，每一个Regiono中有一个regionservier的服务，统一由Master管理，这个模式也是依赖于HDFS+Zookeeper来完成的。</p><table><thead><tr><th style="text-align:left">Node Name</th><th style="text-align:left">Master</th><th style="text-align:left">Zookeeper</th><th style="text-align:left">RegiinServer</th></tr></thead><tbody><tr><td style="text-align:left">Node-A</td><td style="text-align:left">yes</td><td style="text-align:left">yes</td><td style="text-align:left">no</td></tr><tr><td style="text-align:left">Node-B</td><td style="text-align:left">backup</td><td style="text-align:left">yes</td><td style="text-align:left">yes</td></tr><tr><td style="text-align:left">Node-C</td><td style="text-align:left">no</td><td style="text-align:left">yes</td><td style="text-align:left">yes</td></tr></tbody></table><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd hbase</span><br><span class="line">hbase-env.sh</span><br><span class="line">export JAVA_HOME = ***</span><br><span class="line">export HBASE_MANAGES_ZK = false</span><br></pre></td></tr></table></figure><h2 id="hbase配置文件"><a href="#hbase配置文件" class="headerlink" title="hbase配置文件"></a>hbase配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim hbase-site.xml</span><br><span class="line"></span><br><span class="line">hbase.rootdir -&gt; hdfs://master:8020/hbase</span><br><span class="line">hbase.cluster.distributed -&gt; true</span><br><span class="line">hbase.zookeeper.quorum-&gt; master;node1;node2;</span><br></pre></td></tr></table></figure><p>切换成之前的配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mv hadoop/ hadoop-ha</span><br><span class="line">mv dist-hadoop hadoop</span><br><span class="line">cd data/</span><br><span class="line">mv tmp/ tmp-ha</span><br><span class="line">mv dist-tmp/ tmp</span><br><span class="line"></span><br><span class="line"># 第二台和第三台同理</span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1: hadoop-daemon.sh start datanode</span><br><span class="line">2: hadoop-daemon.sh start datanode</span><br><span class="line">3: hadoop-daemon.sh start datanode</span><br><span class="line"></span><br><span class="line">1: zookeeper*.start</span><br><span class="line">2: zookeeper*.start</span><br><span class="line">3: zookeeper*.start</span><br><span class="line"></span><br><span class="line">1: hbase-daemon.sh start master</span><br><span class="line">1: hbase-daemon.sh start regionserver</span><br><span class="line"></span><br><span class="line">2: hbase-daemon.sh start regionserver</span><br><span class="line">3: hbase-daemon.sh start regionserver</span><br></pre></td></tr></table></figure><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1. 第一步要链接（客户端和服务器的）-&gt; hbase shell</span><br><span class="line">2. 查看表 -&gt; list</span><br><span class="line">3. 帮助 -&gt; help </span><br><span class="line">4. 创建表 -&gt; create &apos;test&apos;,&apos;info&apos;</span><br><span class="line">5. 加入数据 :</span><br><span class="line">-&gt; </span><br><span class="line">put &apos;test&apos;,&apos;001&apos;,&apos;info:username&apos;,&apos;wittyfans&apos;</span><br><span class="line">scan &apos;test&apos;</span><br><span class="line">put &apos;test&apos;,&apos;0001&apos;,&apos;info:age&apos;,&apos;30&apos;</span><br><span class="line">put &apos;test&apos;,&apos;0001&apos;,&apos;info:sex&apos;,&apos;male&apos;</span><br><span class="line">6. 禁用 -&gt; disable &apos;test&apos;</span><br><span class="line">7. 删除 -&gt; drop &apos;test&apos; (禁用后才能删除)</span><br></pre></td></tr></table></figure><h2 id="Master-Backup配置"><a href="#Master-Backup配置" class="headerlink" title="Master-Backup配置"></a>Master-Backup配置</h2><p>这个Master-Backup，其实就是相当于HA的实现，实现一个故障备份机制。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 创建配置文件 -&gt; touch backup-masters</span><br><span class="line">2. 编辑 -&gt; vi backup-masters</span><br><span class="line"># 把二号机器作为备用</span><br><span class="line">node2</span><br><span class="line"></span><br><span class="line"># 分发到别的机器上去</span><br><span class="line">3. 启动测试 -&gt; start-hbase.sh</span><br></pre></td></tr></table></figure><p>应该可以看到两个master，一个是standby一个是active.</p><h1 id="基于业务创建表结构"><a href="#基于业务创建表结构" class="headerlink" title="基于业务创建表结构"></a>基于业务创建表结构</h1><h2 id="下载元数据"><a href="#下载元数据" class="headerlink" title="下载元数据"></a>下载元数据</h2><ul><li><a href="http://www.sogou.com/labs/resource/q.php" target="_blank" rel="noopener">搜狗实验室-用户查询日志</a></li></ul><p>根据元数据创建表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hbase shell</span><br><span class="line">create &apos;weblogs&apos;,&apos;info&apos;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;BigData学习历程之HBase部分。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="coding" scheme="http://wittyfans.com/categories/coding/"/>
    
    
      <category term="BigData" scheme="http://wittyfans.com/tags/BigData/"/>
    
      <category term="HBase" scheme="http://wittyfans.com/tags/HBase/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop2.x HA架构学习与配置</title>
    <link href="http://wittyfans.com/coding/Hadoop2-x-HA%E6%9E%B6%E6%9E%84%E5%AD%A6%E4%B9%A0%E4%B8%8E%E9%85%8D%E7%BD%AE.html"/>
    <id>http://wittyfans.com/coding/Hadoop2-x-HA架构学习与配置.html</id>
    <published>2018-05-29T14:57:17.000Z</published>
    <updated>2018-05-29T14:58:13.529Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>HA，即一套宕机解决方案，用来实现分布式系统中的自动故障转移。</p></blockquote><a id="more"></a><h1 id="HA是什么？"><a href="#HA是什么？" class="headerlink" title="HA是什么？"></a>HA是什么？</h1><blockquote><p>我们说DataNode存储数据, NameNode是目录，而yarn中,ResourceManager, 相当于是任务的总指挥，项目管理，那么这个HDFS中的NameNode和Yarn中的ResourceManager其实是非常重要的，如果一台挂了，那么整个集群都会没法提供服务，HA就是为这种故障提供一套解决方案。</p></blockquote><h1 id="HA原理"><a href="#HA原理" class="headerlink" title="HA原理"></a>HA原理</h1><p>在NameNode的目录更新的时候，会在本地的edits和fsImage中保存更新记录，所以我们可以设置多个NameNode，然后设置一个中间节点去保存这个edits和fsImage文件，这样每个NameNode有更新，这个中间节点就会记录，确保一台NameNode宕机的时候能及时的把数据转移到其他Node上去。</p><p>这个中间节点就叫做JournalNode，它也有副本，即多份Namenode的日志。</p><h1 id="HDFS-HA配置"><a href="#HDFS-HA配置" class="headerlink" title="HDFS HA配置"></a>HDFS HA配置</h1><h2 id="规划"><a href="#规划" class="headerlink" title="规划"></a>规划</h2><p>先看一下之前的配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NameNode</span><br><span class="line">DataNode1 DataNode2 DataNode3</span><br></pre></td></tr></table></figure><p>规划了HA的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NameNode  NameNode</span><br><span class="line">DataNode1 DataNode2 DataNode3</span><br><span class="line">Journalnode Journalnode Journalnode</span><br></pre></td></tr></table></figure><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><p>备份原来的配置 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -r hadoop/ dist-hadoop</span><br><span class="line">mv tmp/ dist-tmp</span><br></pre></td></tr></table></figure><p>再在原来的目录中重新创建tmp文件夹。</p><h2 id="配置hdfs-site-xml"><a href="#配置hdfs-site-xml" class="headerlink" title="配置hdfs-site.xml"></a>配置hdfs-site.xml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1. dfs.nameservice -&gt; 取个名字</span><br><span class="line">2. dfs.ha.namenodes.上面的名字 -&gt;nn1,nn2</span><br><span class="line">3. rpc.address.ns.nn1 -&gt; hostname:8020</span><br><span class="line">4. rpc.address.ns.nn2 -&gt; hostname:8020</span><br><span class="line">5. http-address.ns.nn1 -&gt; hostname:50070</span><br><span class="line">6. http-address.ns.nn2 -&gt; hostname:50070</span><br><span class="line">7. Shared.edits.dir -&gt; qjournal://master:8485;node1:8485;node2:8485;</span><br><span class="line">8. dfs.journalnode.edits.dir -&gt; /opt/modules/hadoop/data/jn</span><br><span class="line">9. failover.proxy.provider.mycluster -&gt; : 设置成默认值即可</span><br><span class="line">10. Fecing.methods -&gt; sshfence : 隔离机制</span><br><span class="line">11. Private-key-files -&gt; hadoop : 用户名</span><br></pre></td></tr></table></figure><h2 id="配置core-site-xml"><a href="#配置core-site-xml" class="headerlink" title="配置core-site.xml"></a>配置core-site.xml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. fs.defaultFS -&gt; hdfs://ns</span><br></pre></td></tr></table></figure><h2 id="配置其他机器"><a href="#配置其他机器" class="headerlink" title="配置其他机器"></a>配置其他机器</h2><p>目录与配置都与第一台一样。</p><h1 id="HDFS中HA启动与测试"><a href="#HDFS中HA启动与测试" class="headerlink" title="HDFS中HA启动与测试"></a>HDFS中HA启动与测试</h1><h2 id="启动HA"><a href="#启动HA" class="headerlink" title="启动HA"></a>启动HA</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 启动1,2,3机器 -&gt; sbin/hadoop-daemon.sh start journalnode</span><br><span class="line">2. 格式化 -&gt; bxn/hdfs namenode -format</span><br><span class="line">3. 重启NameNode</span><br><span class="line">4. 在nn2上，同步nn1的原数据信息 -&gt; bin/hdfs namenode -bootstrpStandby</span><br><span class="line">5. 启动nn2</span><br><span class="line">6. 将nn1的状态改为active -&gt; bin/hdfs haadmin -transitionToActive nn1</span><br><span class="line">7. 启动测试 -&gt;</span><br></pre></td></tr></table></figure><h2 id="测试人工故障转移"><a href="#测试人工故障转移" class="headerlink" title="测试人工故障转移"></a>测试人工故障转移</h2><p>测试的原理是，先上传一个文件到DataNode，然后这个时候把NN1干掉，再去取数据，观察其是否会自动切换NameNode.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 创建目录 -&gt; bin/hdfs dfs -mkdir -p /path/</span><br><span class="line">2. 上传目录 -&gt; bin/hdfs dfs -put /path/</span><br><span class="line">3. 尝试读取文件 -&gt; hdfs dfs -text /user/kfk/data/filename</span><br><span class="line">4. 干掉nn1观察 -&gt; jps:21319 -&gt; kill -8 21317</span><br><span class="line">5. Nn2改成active -&gt; hdfs haadmin -transitionToActive nn2</span><br><span class="line">--forceactive</span><br><span class="line">6. 再从nn1尝试读取文件观察是否成功 -&gt; hdfs dfs -text /user/kfk/data/filename</span><br></pre></td></tr></table></figure><p>以上的切换的过程，是人工手动切换的方式，但如果借助Zookeeper，就可以实现自动故障转移了。</p><h2 id="自动故障转移"><a href="#自动故障转移" class="headerlink" title="自动故障转移"></a>自动故障转移</h2><p>首先需要配置hdfs-site文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. dfs.ha.automic-failover.enabled.youmaster -&gt; true</span><br><span class="line">2. ha.zookeeper.quorum -&gt; master:2181,node1:2181,node:2181</span><br></pre></td></tr></table></figure><p>停掉所有服务，然后启动集群的zookeeper.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. zkserver.sh start</span><br><span class="line">2. 初始化HA再Zookeeper中状态bin/hdfs zkfc -formatZK</span><br><span class="line">3. start-dfs.sh</span><br><span class="line">4. 各个机器上启动 -&gt; Hadooop-daemon.sh start zkfc</span><br></pre></td></tr></table></figure><p>配置完成之后，启动集群后，如果有多个nanonode，系统会自动帮我们选一个active。</p><p>如果ZKFC没有启动起来，可以去log里面找 <em>zkfc-bigdata-pro02.master.logs</em> 日志。</p><p>配置完成之后，HDFS中的HA分布如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">namenode    namenode</span><br><span class="line">datanode    datanode    datanode</span><br><span class="line">journalnode journalnode journalnode</span><br><span class="line">zkfc        zkfc</span><br></pre></td></tr></table></figure><h1 id="Yarn中HA"><a href="#Yarn中HA" class="headerlink" title="Yarn中HA"></a>Yarn中HA</h1><h2 id="原理介绍"><a href="#原理介绍" class="headerlink" title="原理介绍"></a>原理介绍</h2><p>对于Yarn来说，ResourceManager是最重要的，所以需要多台ResourceManager，实现一台RM宕机后，可以自动切换到另一台RM.</p><p>同样，Yarn中实现HA，也是借助于Zookeeper。</p><p>先来看一下规划:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RM RM</span><br><span class="line">NM NM NM</span><br></pre></td></tr></table></figure><h2 id="Yarn-site配置"><a href="#Yarn-site配置" class="headerlink" title="Yarn-site配置"></a>Yarn-site配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. 删除yarn.resourcemanager.hostname项，因为多台rm之后就不需要再指定rm了</span><br><span class="line">2. yarn.resourcemanager.ha.enabled -&gt; true</span><br><span class="line">3. cluster-id -&gt; rs</span><br><span class="line">4. ha.rm-ids -&gt; rm1,rm2</span><br><span class="line">5. hostname.rm1 -&gt; yourhostname</span><br><span class="line">6. hostname.rm2 -&gt; yourhostname</span><br><span class="line">7. zk.address -&gt;master:2181;node1:2181;node2:2181</span><br><span class="line">8. recovery.enabled -&gt; true</span><br><span class="line">9. 配置数据恢复为zookeeper: *.store.class -&gt; default_config</span><br></pre></td></tr></table></figure><p>按照这个顺序配置，再分发到其他的节点，然后就可以测试了。</p><h2 id="Yarn-HA-启动与测试"><a href="#Yarn-HA-启动与测试" class="headerlink" title="Yarn HA 启动与测试"></a>Yarn HA 启动与测试</h2><ol><li>启动RM两个</li><li>启动NM三个</li><li>测试 <em>MapReduce WordCount</em> 程序</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. yarn-daemon.sh start resourcemanager (in nn1 and nn2)</span><br><span class="line">2. yarn-daemon.sh start nodemanager(in master nd1 nd2)</span><br></pre></td></tr></table></figure><p>测试 <em>MapReduce</em> 就不赘述啦，至此 <em>HA</em> 在 <em>Hadoop</em> 中的配置结束。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;HA，即一套宕机解决方案，用来实现分布式系统中的自动故障转移。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="coding" scheme="http://wittyfans.com/categories/coding/"/>
    
    
      <category term="hadoop" scheme="http://wittyfans.com/tags/hadoop/"/>
    
      <category term="bigdata" scheme="http://wittyfans.com/tags/bigdata/"/>
    
      <category term="HA" scheme="http://wittyfans.com/tags/HA/"/>
    
  </entry>
  
  <entry>
    <title>PowerShell批量改密码</title>
    <link href="http://wittyfans.com/coding/PowerShell%E6%89%B9%E9%87%8F%E6%94%B9%E5%AF%86%E7%A0%81.html"/>
    <id>http://wittyfans.com/coding/PowerShell批量改密码.html</id>
    <published>2018-05-28T15:05:49.000Z</published>
    <updated>2018-05-28T15:11:57.327Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近接了个活，公司有1200多个人的域账号密码需要更改，遂自己写了个批量的脚本实现，效率美滋滋。</p></blockquote><a id="more"></a><p>首先是要去拿到用户的信息，然后改一个随机的密码，再捞出用户的手机号码，把密码发送出去。</p><p>用户的账号我已经有了，那就把他们放到文本文件里面，直接就可以把里面的信息取出来，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$users = Get-Content $userListPath</span><br></pre></td></tr></table></figure><p>但发现每次写死路径很不方便，改来改去的，那就直接调用系统选择文件对话框嘛，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Add-Type -AssemblyName System.Web</span><br><span class="line"></span><br><span class="line">Function Get-FileName($initialDirectory)</span><br><span class="line">&#123;</span><br><span class="line">    [System.Reflection.Assembly]::LoadWithPartialName(&quot;System.windows.forms&quot;) | Out-Null</span><br><span class="line">    </span><br><span class="line">    $OpenFileDialog = New-Object System.Windows.Forms.OpenFileDialog</span><br><span class="line">    $OpenFileDialog.initialDirectory = $initialDirectory</span><br><span class="line">    $OpenFileDialog.filter = &quot;TXT (*.txt)| *.txt&quot;</span><br><span class="line">    $OpenFileDialog.ShowDialog() | Out-Null</span><br><span class="line">   return $OpenFileDialog.FileName</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用这个函数，调用一次就会出现选择文件对话框。通过$OpenFileDialog.filter来控制，可以自定义要过滤的文件类型，选择完了之后，默认会输出成功与失败的提示。我不想看到这个提示，就直接在后面加个管道out-null了，选择好文件，该函数就会返回该文件的路径，拿到这个路径，就可以用get-content拿到其中的名字了。</p><p>拿到名字得先处理一下，因为在域里面名字中间有空格容易出错，得先把它们的空格替换成.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$UserName = $rawUserName -replace &quot; &quot;,&quot;.&quot;</span><br></pre></td></tr></table></figure><p>拿到名字了，继续捞其他信息, 首先是名字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$aduser = get-aduser -server yourdomain.com $UserName</span><br></pre></td></tr></table></figure><p>然后是手机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$aduserPhone = (Get-ADUser -Server server.com $UserName -Properties mobile | select mobile).mobile</span><br></pre></td></tr></table></figure><p>接下先创建凭证，这样才能改密码，因为脚本还要给同事用嘛，把密码直接写进去还是不太好，所以得加密。</p><p>我写了个小脚本，把输入密码进去，就会把生成好的加密字符串复制到剪贴板，很方便，下面是代码，复制保存为ps1后缀的文件就可以用啦。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Add-Type -AssemblyName System.Windows.Forms</span><br><span class="line"></span><br><span class="line">function Read-MessageBoxDialog</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    param ([string]$Message,</span><br><span class="line"></span><br><span class="line">        [string]$WindowTitle,</span><br><span class="line"></span><br><span class="line">        [System.Windows.Forms.MessageBoxButtons]$Buttons = [System.Windows.Forms.MessageBoxButtons]::OK,</span><br><span class="line"></span><br><span class="line">        [System.Windows.Forms.MessageBoxIcon]$Icon = [System.Windows.Forms.MessageBoxIcon]::None)</span><br><span class="line"></span><br><span class="line">    Add-Type -AssemblyName System.Windows.Forms</span><br><span class="line"></span><br><span class="line">    return [System.Windows.Forms.MessageBox]::Show($Message, $WindowTitle, $Buttons, $Icon)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">write-host &quot;请输入原始密码：↓↓↓↓&quot;</span><br><span class="line">$inputPWD = Read-Host | ConvertTo-SecureString -AsPlainText -Force</span><br><span class="line">$encryptedPWD = $inputPWD | ConvertFrom-SecureString</span><br><span class="line">[Windows.Forms.Clipboard]::SetText($encryptedPWD)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Read-MessageBoxDialog -Message &quot;已拷贝到剪贴板&quot; -WindowTitle &quot;安全密码制作工具&quot; -Buttons OK -Icon Information</span><br></pre></td></tr></table></figure><p>拿到密码之后，就可以制作自己的凭证了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$User = &quot;yourAccount&quot;</span><br><span class="line">$Pwd = &quot;加密密码&quot; | ConvertTo-SecureString</span><br><span class="line">$Credential = New-Object -TypeName &quot;System.Management.Automation.PSCredential&quot; -ArgumentList $User, $Pwd</span><br></pre></td></tr></table></figure><p>需要注意的是，本机制作的凭证，只可以在自己的机器上用，如果要在别的机器用，需要解锁，这个有点复杂，挖个坑以后再研究。</p><p>接下来就可以改密码了，我们先把随机密码准备好</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$PasswordLength = 16</span><br><span class="line">$SpecialCharCount = 8</span><br><span class="line">$Password =[System.Web.Security.Membership]::GeneratePassword($PasswordLength, $SpecialCharCount)</span><br></pre></td></tr></table></figure><p>直接一个for循环遍历所有名单，更改密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Get-ADUser -Server wittyfans.com -Identity $UserName | Set-ADAccountPassword -NewPassword $SecPaswd -Server wittyfans.com -Credential $Credential </span><br><span class="line">        </span><br><span class="line">Set-ADUser -Identity $UserName -ChangePasswordAtLogon $false -Server wittyfans.com -Credential $Credential |Unlock-ADAccount -Verbose -Server wittyfans.com -Credential $Credential</span><br></pre></td></tr></table></figure><p>这个语句会直接给用户设一个新密码，并解锁他的账户。需要把其中的wittyfans.com变成你们自己的配置，其中有一个步骤需要注意的是，如果你去拿用户的信息，但这个名字错了，拿不到的话，会直接报错造成程序中断，这个时候得用try-catch语句处理，然后设置一个标记，通过这个标记去判断域中是否有这个用户。</p><p>最后就是输出数据啦，直接把所有数据保存起来，用out-file语句就可以保存成文本文件了，加上-Append，这样才不会把数据重写哦。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Out-File -FilePath .\Desktop\ResetedPassWord.txt -Append</span><br></pre></td></tr></table></figure><p>完工！</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近接了个活，公司有1200多个人的域账号密码需要更改，遂自己写了个批量的脚本实现，效率美滋滋。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="coding" scheme="http://wittyfans.com/categories/coding/"/>
    
    
      <category term="HelpDesk" scheme="http://wittyfans.com/tags/HelpDesk/"/>
    
      <category term="PowerShell" scheme="http://wittyfans.com/tags/PowerShell/"/>
    
      <category term="AD" scheme="http://wittyfans.com/tags/AD/"/>
    
  </entry>
  
  <entry>
    <title>Zookeeper安装、配置、启动</title>
    <link href="http://wittyfans.com/coding/Zookeeper%E5%AE%89%E8%A3%85%E3%80%81%E9%85%8D%E7%BD%AE%E3%80%81%E5%90%AF%E5%8A%A8.html"/>
    <id>http://wittyfans.com/coding/Zookeeper安装、配置、启动.html</id>
    <published>2018-05-28T14:18:59.000Z</published>
    <updated>2018-05-28T14:20:34.519Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>An effort to develop and maintain an open-source server which enables highly reliable distributed coordination.</p></blockquote><a id="more"></a><h1 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h1><p>要找特定的版本，可以去这个两个链接 </p><ul><li>官方归档<a href="http://archive.apache.org/dist/" target="_blank" rel="noopener"> 🔗</a> </li><li>CDN <a href="http://archive.cloudera.com/cdh5/cdh/5/" target="_blank" rel="noopener">🔗</a></li></ul><p>CDN版本更多的考虑了兼容性的问题，建议尽可能用CDN的版本，下载后，scp到opt/softwares/,然后解压，如果发现显示是红色的，可以使用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Chmod u+x filename</span><br></pre></td></tr></table></figure><p>来使它具备可执行的权限，然后解压 <em>tar -zxf zookeeper -C /path/</em> 到modules文件夹中去。</p><p>然后进入，主要有几个目录，bin, sbin, 等，跟hadoop是差不多的。</p><h1 id="配置参数"><a href="#配置参数" class="headerlink" title="配置参数"></a>配置参数</h1><p>配置一般都是在conf目录下面，里面有三个文件:</p><ul><li>configuration.xsl</li><li>log4j.properties (日志)</li><li>zoo_sample.cfg (主要需要配置的)</li></ul><p>首先把zoo_sample.cfg改名成zoo.cfg, 进去配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tickTime #心跳时间</span><br><span class="line">initLimit #初始化时间最久能忍多久，心跳时间为单位</span><br><span class="line">syneLimit #平时发消息延迟能忍多久 </span><br><span class="line">dataDir #保存数据的目录</span><br><span class="line">clientPort #客户端链接zookeeper服务器的端口，zookeeper会监听这个端口接受客户端请求</span><br><span class="line"># 把三个节点的信息添加进来：</span><br><span class="line">server.1=host1name:2888:3888</span><br><span class="line">server.2=host2name:2888:3888</span><br><span class="line">server.3=host3name:2888:3888</span><br></pre></td></tr></table></figure><p>创建一个文件夹，路径为 <em>opt/modules/zookeeper/zkData</em>，然后在zkData文件夹中，创建一个名为 <em>myid</em> 的文件，并在其中标示为对应的id，master为1，然后分发到其他机器，再修改相应的 <em>myid</em> 文件，node1为2，node2为3.</p><p>这样，zookeeper就配置完成了。</p><h1 id="启动测试"><a href="#启动测试" class="headerlink" title="启动测试"></a>启动测试</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 启动</span><br><span class="line">zkserver.sh start</span><br><span class="line"></span><br><span class="line"># 链接（需要把全部节点启动方可链接成功）</span><br><span class="line">zkcli.sh</span><br></pre></td></tr></table></figure><p>启动完成之后，集群会自动选举出一位老大作为tl，如果只有1台机器，会连接失败，因为集群中，可损坏的机器为N，它要满足一个算法： <em>2N+1</em> ，也就是说最少要有三台机器，如果只有一台启动，那集群会以为其他两台机器损坏了。</p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p>链接成功后，就进入到了zookeeper终端界面，可以创建目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 创建 Create /foldername</span><br><span class="line"># 查看 get /foldername </span><br><span class="line"># 查看tl和flow zkserver.sh status</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li>官方归档<a href="http://archive.apache.org/dist/" target="_blank" rel="noopener"> 🔗</a> </li><li>CDN <a href="http://archive.cloudera.com/cdh5/cdh/5/" target="_blank" rel="noopener">🔗</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;An effort to develop and maintain an open-source server which enables highly reliable distributed coordination.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="coding" scheme="http://wittyfans.com/categories/coding/"/>
    
    
      <category term="bigdata" scheme="http://wittyfans.com/tags/bigdata/"/>
    
      <category term="zookeeper" scheme="http://wittyfans.com/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>运行Hadoop WordCount 出错</title>
    <link href="http://wittyfans.com/coding/%E8%BF%90%E8%A1%8CHadoop-WordCount-%E5%87%BA%E9%94%99.html"/>
    <id>http://wittyfans.com/coding/运行Hadoop-WordCount-出错.html</id>
    <published>2018-05-22T04:48:36.000Z</published>
    <updated>2018-05-22T04:52:17.176Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>第一个WordCount程序竟然跑失败了，:(。</p></blockquote><a id="more"></a><p>配置好系统环境之后，准备开始跑第一个WordCount任务，jps后,各机器的输出如下：</p><p>Master:</p><ul><li>NameNode</li><li>DataNode</li><li>ResourceManager</li><li>NodeManager</li><li>jobHistoryServer</li><li>jps</li></ul><p>Node1:</p><ul><li>DataNode</li><li>NodeManager</li></ul><p>Node2:</p><ul><li>DataNode</li><li>NodeManager</li></ul><p>服务全都正常，于是开始执行WordCount,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/yarn jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.0.0.jar wordcount /user/master/data/wc.input /user/master/data/result</span><br></pre></td></tr></table></figure><p>失败，提示: <em>Exception from container launch, pre launch.err</em>,去logs里面看，也没什么异常。</p><p>Google了一圈，没找到什么资料，去yarn的追踪界面，发现一个异常，找不到或无法加载主类，<em>**</em>。</p><p>于是怀疑是路径的问题，马上cd到bin目录下，</p><p>执行Hadoop Classpath，获取一个输出，并将该输出内容设置为Yarn-siet.xml 中Yarn.application.classpath的值。</p><p>查了一下资料，发现，</p><p><em>这个配置为map、reduce task指定其所需要的hadoop包存在与本地的什么位置，以便在task启动时，能根据该配置找到所需要的hadoop相关class。 如果配置错误，就会class not found（就是你的错误中的那个中文：错误: 找不到或无法加载主类</em></p><p>成功解决 :)</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;第一个WordCount程序竟然跑失败了，:(。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="coding" scheme="http://wittyfans.com/categories/coding/"/>
    
    
      <category term="hadoop" scheme="http://wittyfans.com/tags/hadoop/"/>
    
      <category term="bigdata" scheme="http://wittyfans.com/tags/bigdata/"/>
    
      <category term="yarn" scheme="http://wittyfans.com/tags/yarn/"/>
    
      <category term="wordcount" scheme="http://wittyfans.com/tags/wordcount/"/>
    
  </entry>
  
  <entry>
    <title>mysql使用笔记</title>
    <link href="http://wittyfans.com/coding/mysql%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0.html"/>
    <id>http://wittyfans.com/coding/mysql使用笔记.html</id>
    <published>2018-04-24T09:23:35.000Z</published>
    <updated>2018-04-26T07:27:26.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>针对常用的一些操作与命令，做个笔记，仅供参考 👨‍💻</p></blockquote><a id="more"></a><h1 id="安装-mysql"><a href="#安装-mysql" class="headerlink" title="安装 mysql"></a>安装 mysql</h1><p>Mysql有许多的版本，你要根据自己的操作系统选择合适的安装包和安装源，我用的是Mac OS，安装之前，最好使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep mysql</span><br></pre></td></tr></table></figure><p>检查一下是否已经安装了mysql，如果你使用的是Windows系统，请参考别的安装教程。</p><p>如果已经装了，可以先卸载：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -e mysql　　// 普通删除模式</span><br><span class="line">rpm -e --nodeps mysql　　// 强力删除模式，如果使用上面命令删除时，提示有依赖的其它文件，则用该命令可以对其进行强力删除</span><br></pre></td></tr></table></figure><p>安装 mysql：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql</span><br><span class="line">yum install mysql-server</span><br><span class="line">yum install mysql-devel</span><br></pre></td></tr></table></figure><p>安装成功后，使用下面的命令验证一下是否安装成功，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin --version</span><br></pre></td></tr></table></figure><p>对于Mac，更推荐使用安装包的形式安装，首先去官网下载，下载地址<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">点我</a>,安装完成之后，还需要配置环境变量，Mac配置环境变量的地方有</p><ol><li><p>/etc/profile   （建议不修改这个文件 ）<br>全局（公有）配置，不管是哪个用户，登录时都会读取该文件。</p></li><li><p>/etc/bashrc    （一般在这个文件中添加系统级环境变量）<br>全局（公有）配置，bash shell执行时，不管是何种方式，都会读取此文件。</p></li><li><p>~/.bash_profile  （一般在这个文件中添加用户级环境变量）</p></li></ol><p>每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该文件仅仅执行一次!，我们一般使用第三种方式</p><p>随后，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line">添加以下指令：</span><br><span class="line"></span><br><span class="line">export PATH=$&#123;PATH&#125;:/usr/local/mysql/bin</span><br><span class="line">保存后立即使其生效：</span><br><span class="line"></span><br><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure><p>便可以使用 MySQL 的相关命令了。</p><p>如果有版本信息输出，那么表示安装成功了，如果没有输出，那么说明安装失败。</p><p>安装完了之后，需要对mysql进行配置，首先就是root账户的密码，通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root password &quot;new_password&quot;;</span><br></pre></td></tr></table></figure><p>来设置root账户的密码。</p><p>然后你可以通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>来连接mysql服务器。</p><p>平时要启动的时候，可以通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep mysqld</span><br></pre></td></tr></table></figure><p>来检查是否启动了mysql服务器,若想关掉mysql，则使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root -p shutdown</span><br></pre></td></tr></table></figure><blockquote><p>箭头标记 -&gt; 不是 SQL 语句的一部分，它仅仅表示一个新行，如果一条SQL语句太长，我们可以通过回车键来创建一个新行来编写 SQL 语句，SQL 语句的命令结束符为分号 ;</p></blockquote><h1 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h1><p>创建一个名为testbase的数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root -p create testbase</span><br></pre></td></tr></table></figure><p>如果你使用root用户登陆了，那么可以使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Create database base_name</span><br></pre></td></tr></table></figure><p>创建数据库，该命令的作用：</p><ol><li>如果数据库不存在则创建，存在则不创建。</li><li>创建RUNOOB数据库，并设定编码集为utf8</li></ol><h1 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h1><p>删除名叫testbase的数据库，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root -p drop testbase;</span><br></pre></td></tr></table></figure><h1 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h1><p>如果你有多个数据库，比如A1，A2，那么使用mysql进入mysql命令行后，使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use+数据库名</span><br></pre></td></tr></table></figure><p>命令就可以切换数据库，需要注意的是，如果是直接输入mysql进入，那么会显示没有权限，需要使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>再输入密码进入。</p><h1 id="MySQL-数据类型"><a href="#MySQL-数据类型" class="headerlink" title="MySQL 数据类型"></a>MySQL 数据类型</h1><h2 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h2><blockquote><p>严格数值数据类型(INTEGER、SMALLINT、DECIMAL和NUMERIC)，以及近似数值数据类型(FLOAT、REAL和DOUBLE PRECISION)</p></blockquote><h2 id="日期-时间"><a href="#日期-时间" class="headerlink" title="日期/时间"></a>日期/时间</h2><blockquote><p>表示时间值的日期和时间类型为DATETIME、DATE、TIMESTAMP、TIME和YEAR</p></blockquote><h2 id="字符串-字符-类型"><a href="#字符串-字符-类型" class="headerlink" title="字符串(字符)类型"></a>字符串(字符)类型</h2><blockquote><p>字符串类型指CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM和SET。该节描述了这些类型如何工作以及如何在查询中使用这些类型。</p></blockquote><p>更多可以参考<a href="http://www.runoob.com/mysql/mysql-data-types.html" target="_blank" rel="noopener">W3C</a>的介绍。</p><h1 id="数据增改查"><a href="#数据增改查" class="headerlink" title="数据增改查"></a>数据增改查</h1><h2 id="添加表"><a href="#添加表" class="headerlink" title="添加表"></a>添加表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS `movie`(</span><br><span class="line">   `id` INT UNSIGNED AUTO_INCREMENT,</span><br><span class="line">   `name` VARCHAR(100) NOT NULL,</span><br><span class="line">   `author` VARCHAR(40) NOT NULL,</span><br><span class="line">   `submission_date` DATE,</span><br><span class="line">   PRIMARY KEY ( `id` )</span><br><span class="line">)ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure><h2 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO tables_name</span><br><span class="line">    -&gt; (runoob_title, runoob_author, submission_date)</span><br><span class="line">    -&gt; VALUES</span><br><span class="line">    -&gt; (&quot;wittyfans.com&quot;, &quot;wittyfans&quot;, NOW());</span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><p>删除就直接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE table_name ;</span><br></pre></td></tr></table></figure></p><p>就可以了。</p><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT column_name,column_name</span><br><span class="line">FROM table_name</span><br><span class="line">[WHERE Clause]</span><br><span class="line">[LIMIT N][ OFFSET M]</span><br></pre></td></tr></table></figure><ul><li>查询语句中你可以使用一个或者多个表，表之间使用逗号(,)分割，并使用WHERE语句来设定查询条件。</li><li>SELECT 命令可以读取一条或者多条记录。</li><li>你可以使用星号（*）来代替其他字段，SELECT语句会返回表的所有字段数据</li><li>你可以使用 WHERE 语句来包含任何条件。</li><li>你可以使用 LIMIT 属性来设定返回的记录数。</li><li>你可以通过OFFSET指定SELECT语句开始查询的数据偏移量。默认情况下偏移量为0。</li></ul><h2 id="使用where限定条件查找"><a href="#使用where限定条件查找" class="headerlink" title="使用where限定条件查找"></a>使用where限定条件查找</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT field1, field2,...fieldN FROM table_name1, table_name2...</span><br><span class="line">[WHERE condition1 [AND [OR]] condition2.....</span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 限定名字</span><br><span class="line">select * from my_info where name = &quot;Wittyfans&quot;</span><br><span class="line"></span><br><span class="line"># 限定名字不等于&apos;wittyfans&apos;,微软Access只支持&lt;&gt;</span><br><span class="line">select * from my_info where name &lt;&gt;/!= &quot;Wittyfans&quot;</span><br></pre></td></tr></table></figure><h2 id="修改、删除"><a href="#修改、删除" class="headerlink" title="修改、删除"></a>修改、删除</h2><p>修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">UPDATE my_info SET name=&quot;Witty Fans&quot; WHERE id=xxxx;</span><br></pre></td></tr></table></figure><p>删除：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">delete from my_info where id=xxxx;</span><br></pre></td></tr></table></figure><h2 id="使用LIke模糊查找"><a href="#使用LIke模糊查找" class="headerlink" title="使用LIke模糊查找"></a>使用LIke模糊查找</h2><p>在表中，查找以S开头的记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select * from my_info where name like &apos;S%&apos;</span><br></pre></td></tr></table></figure><p>在表中，查找以S结尾的记录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">select * from my_info where name like &apos;%S&apos;</span><br></pre></td></tr></table></figure><p>Mysql的通配符有%，[],_</p><h2 id="UNION-操作符"><a href="#UNION-操作符" class="headerlink" title="UNION 操作符"></a>UNION 操作符</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT country FROM Websites</span><br><span class="line">UNION</span><br><span class="line">SELECT country FROM apps</span><br><span class="line">ORDER BY country;</span><br></pre></td></tr></table></figure><p>从Websites和apps这两个表中选择存在的country，并去除重复的，显示出来。</p><blockquote><p>UNION 不能用于列出两个表中所有的country。如果一些网站和APP来自同一个国家，每个国家只会列出一次。UNION 只会选取不同的值。请使用 UNION ALL 来选取重复的值！</p></blockquote><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 升降序，DESC降序，ASC升序</span><br><span class="line">SELECT * from my_info_table ORDER BY id ASC/DESC</span><br><span class="line"></span><br><span class="line"># 如果列中a相同，则按b排序，否则按a</span><br><span class="line">Select a,b,c from table order by a,b;</span><br><span class="line"></span><br><span class="line"># 还可以使用列的相对位置来排序</span><br><span class="line">Select a,b,c from table order by 2,3;</span><br><span class="line"></span><br><span class="line"># 假设a是价格，那么先按价格排贵的在前，然后再按b排</span><br><span class="line">Select a,b,c from table order by a DESC,b;</span><br></pre></td></tr></table></figure><h2 id="Group-by语句"><a href="#Group-by语句" class="headerlink" title="Group by语句"></a>Group by语句</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT name, COUNT(*) FROM   employee_tbl GROUP BY name;</span><br></pre></td></tr></table></figure><p>会把结果分组，第一个是名字，第二个是这个名字出现的次数。</p><p>也可以统计整个列中的数据，例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Select id ,count(*) as num_prods from products group by id;</span><br></pre></td></tr></table></figure><h2 id="WITH-ROLLUP"><a href="#WITH-ROLLUP" class="headerlink" title="WITH ROLLUP"></a>WITH ROLLUP</h2><p>WITH ROLLUP 可以实现在分组统计数据基础上再进行相同的统计（SUM,AVG,COUNT…）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT name, SUM(singin) as singin_count FROM  employee_tbl GROUP BY name WITH ROLLUP;</span><br></pre></td></tr></table></figure><h1 id="多个表取数据JOIN"><a href="#多个表取数据JOIN" class="headerlink" title="多个表取数据JOIN"></a>多个表取数据JOIN</h1><p>JOIN 按照功能大致分为如下三类：</p><ul><li>INNER JOIN（内连接,或等值连接）：获取两个表中字段匹配关系的记录。</li><li>LEFT JOIN（左连接）：获取左表所有记录，即使右表没有对应匹配的记录。</li><li>RIGHT JOIN（右连接）： 与 LEFT JOIN 相反，用于获取右表所有记录，即使左表没有对应匹配的记录。</li></ul><h2 id="对比不同表中的数据"><a href="#对比不同表中的数据" class="headerlink" title="对比不同表中的数据"></a>对比不同表中的数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Select a,b,c from d,e where d.f = e.f</span><br></pre></td></tr></table></figure><h1 id="NULL-值处理"><a href="#NULL-值处理" class="headerlink" title="NULL 值处理"></a>NULL 值处理</h1><p>当mysql遇到null值的是，就会报错。为此，mysql提供了三个命令来处理这个问题：</p><ul><li>IS NULL: 当列的值是 NULL,此运算符返回 true。</li><li>IS NOT NULL: 当列的值不为 NULL, 运算符返回 true。</li><li>&lt;=&gt;: 比较操作符（不同于=运算符），当比较的的两个值为 NULL 时返回 true。</li></ul><blockquote><p>你不能使用 = NULL 或 != NULL 在列中查找 NULL 值 。<br>在 MySQL 中，NULL 值与任何其它值的比较（即使是 NULL）永远返回 false，即 NULL = NULL 返回false 。<br>MySQL 中处理 NULL 使用 IS NULL 和 IS NOT NULL 运算符。</p></blockquote><h1 id="对正则的支持"><a href="#对正则的支持" class="headerlink" title="对正则的支持"></a>对正则的支持</h1><p>Mysql也支持正则表达式，话不多说，直接上例子：</p><p><strong>查找name字段中以’st’为开头的所有数据：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">SELECT name FROM person_tbl WHERE name REGEXP &apos;^st&apos;;</span><br></pre></td></tr></table></figure><p><strong>查找name字段中以’ok’为结尾的所有数据：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT name FROM person_tbl WHERE name REGEXP &apos;ok$&apos;;</span><br></pre></td></tr></table></figure><p><strong>查找name字段中包含’mar’字符串的所有数据：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT name FROM person_tbl WHERE name REGEXP &apos;mar&apos;;</span><br></pre></td></tr></table></figure><p><strong>查找name字段中以元音字符开头或以’ok’字符串结尾的所有数据：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT name FROM person_tbl WHERE name REGEXP &apos;^[aeiou]|ok$&apos;;</span><br></pre></td></tr></table></figure><h1 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h1><blockquote><p>如果你在员工管理系统中，删除了一个人，那么你需要删除他的各种账号，比如邮箱、办公的账号，这些资料可能在不同的数据库当中，那么你不可能通过一条语句完成删除的操作，你可能需要。多条语句来达到这个目的，而这些语句就可以被统称为“事务”</p></blockquote><p>事务有几个特性：</p><ul><li>在 MySQL 中只有使用了 Innodb 数据库引擎的数据库或表才支持事务。</li><li>事务处理可以用来维护数据库的完整性，保证成批的 SQL 语句要么全部执行，要么全部不执行。</li><li>事务用来管理 insert,update,delete 语句</li></ul><p>假如银行系统中有一个转账的操作，从支票账户转200美金到储蓄账户，<br>从这个角度来分析下事务必须满足的四个条件（ACID）：</p><ul><li>原子性：一个事务（transaction）中的所有操作，<strong>要么全部完成，要么全部不完成</strong>，不会结束在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。</li><li>一致性：意思就是如果转账失败，谁也不会损失200美金。</li><li>隔离性：一个事务在运行，那么只有结果才对外暴露，比如这个时候银行在统计他的资产，那么在结束前，200美金还是在他的支票里。</li><li>持久性：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。</li></ul><blockquote><p>在 MySQL 命令行的默认设置下，事务都是自动提交的，即执行 SQL 语句后就会马上执行 COMMIT 操作。因此要显式地开启一个事务务须使用命令 BEGIN 或 START TRANSACTION，或者执行命令 SET AUTOCOMMIT=0，用来禁止使用当前会话的自动提交。</p></blockquote><h2 id="事务控制语句"><a href="#事务控制语句" class="headerlink" title="事务控制语句"></a>事务控制语句</h2><ul><li>BEGIN或START TRANSACTION；显式地开启一个事务；</li><li>COMMIT；也可以使用COMMIT WORK，不过二者是等价的。COMMIT会提交事务，并使已对数据库进行的所有修改称为永久性的；</li><li>ROLLBACK；有可以使用ROLLBACK WORK，不过二者是等价的。回滚会结束用户的事务，并撤销正在进行的所有未提交的修改；</li><li>SAVEPOINT identifier；SAVEPOINT允许在事务中创建一个保存点，一个事务中可以有多个SAVEPOINT；</li><li>RELEASE SAVEPOINT identifier；删除一个事务的保存点，当没有指定的保存点时，执行该语句会抛出一个异常；</li><li>ROLLBACK TO identifier；把事务回滚到标记点；</li><li>SET TRANSACTION；用来设置事务的隔离级别。InnoDB存储引擎提供事务的隔离级别有READ UNCOMMITTED、READ COMMITTED、REPEATABLE READ和SERIALIZABLE。</li></ul><h2 id="MYSQL-事务处理主要有两种方法："><a href="#MYSQL-事务处理主要有两种方法：" class="headerlink" title="MYSQL 事务处理主要有两种方法："></a>MYSQL 事务处理主要有两种方法：</h2><p>1、用 BEGIN, ROLLBACK, COMMIT来实现</p><ul><li>BEGIN 开始一个事务</li><li>ROLLBACK 事务回滚</li><li>COMMIT 事务确认</li></ul><p>2、直接用 SET 来改变 MySQL 的自动提交模式:</p><ul><li>SET AUTOCOMMIT=0 禁止自动提交</li><li>SET AUTOCOMMIT=1 开启自动提交</li></ul><h1 id="修改库、表名"><a href="#修改库、表名" class="headerlink" title="修改库、表名"></a>修改库、表名</h1><blockquote><p>修改数据表名或者修改数据表字段时，就需要使用到MySQL ALTER命令</p></blockquote><h2 id="删除，添加或修改表字段"><a href="#删除，添加或修改表字段" class="headerlink" title="删除，添加或修改表字段"></a>删除，添加或修改表字段</h2><p>删除table_name中的I字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name  DROP i;</span><br></pre></td></tr></table></figure><p>在表中新增i字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name ADD i INT;</span><br></pre></td></tr></table></figure><p>可以自定义要插入的位置，FIRST (设定位第一列)， AFTER 字段名（设定位于某个字段之后），例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name DROP i;</span><br><span class="line">ALTER TABLE table_name ADD i INT FIRST;</span><br><span class="line">ALTER TABLE table_name DROP i;</span><br><span class="line">ALTER TABLE table_name ADD i INT AFTER c;</span><br></pre></td></tr></table></figure><blockquote><p>FIRST 和 AFTER 关键字只占用于 ADD 子句，所以如果你想重置数据表字段的位置就需要先使用 DROP 删除字段然后使用 ADD 来添加字段并设置位置。</p></blockquote><h2 id="修改字段类型及名称"><a href="#修改字段类型及名称" class="headerlink" title="修改字段类型及名称"></a>修改字段类型及名称</h2><p>使用Modify语句，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name MODIFY c CHAR(10);</span><br></pre></td></tr></table></figure><p>,也可以使用change语句，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE testalter_tbl CHANGE i j BIGINT;</span><br></pre></td></tr></table></figure><p>指定字段 j 为 NOT NULL 且默认值为100:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ALTER TABLE testalter_tbl MODIFY j BIGINT NOT NULL DEFAULT 100;</span><br></pre></td></tr></table></figure><blockquote><p>如果你不设置默认值，MySQL会自动设置该字段默认为 NULL。</p></blockquote><h2 id="设置字段默认值"><a href="#设置字段默认值" class="headerlink" title="设置字段默认值"></a>设置字段默认值</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE testalter_tbl ALTER i SET DEFAULT 1000;</span><br></pre></td></tr></table></figure><p>也可以删除默认值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE testalter_tbl ALTER i DROP DEFAULT;</span><br></pre></td></tr></table></figure><h2 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a>修改表名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE testalter_tbl RENAME TO alter_tbl;</span><br></pre></td></tr></table></figure><h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><blockquote><p>索引可以极大的提高mysql的检索速度，但过多的使用会降低更新表的的速度，比如对表的INSERT、UPDATE和DELETE，因为更新表的时候，mysql还需要更新索引。</p></blockquote><h2 id="普通索引"><a href="#普通索引" class="headerlink" title="普通索引"></a>普通索引</h2><h3 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE INDEX indexName ON mytable(username(length));</span><br></pre></td></tr></table></figure><h3 id="修改、添加索引"><a href="#修改、添加索引" class="headerlink" title="修改、添加索引"></a>修改、添加索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER table tableName ADD INDEX indexName(columnName)</span><br></pre></td></tr></table></figure><h3 id="创建表的时候指定"><a href="#创建表的时候指定" class="headerlink" title="创建表的时候指定"></a>创建表的时候指定</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE mytable(  </span><br><span class="line"> </span><br><span class="line">ID INT NOT NULL,   </span><br><span class="line"> </span><br><span class="line">username VARCHAR(16) NOT NULL,  </span><br><span class="line"> </span><br><span class="line">INDEX [indexName] (username(length))  </span><br><span class="line"> </span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">DROP INDEX [indexName] ON mytable;</span><br></pre></td></tr></table></figure><h2 id="唯一索引"><a href="#唯一索引" class="headerlink" title="唯一索引"></a>唯一索引</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE UNIQUE INDEX indexName ON mytable(username(length))</span><br></pre></td></tr></table></figure><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER table mytable ADD UNIQUE [indexName] (username(length))</span><br></pre></td></tr></table></figure><h3 id="创建时指定"><a href="#创建时指定" class="headerlink" title="创建时指定"></a>创建时指定</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE mytable(  </span><br><span class="line"> </span><br><span class="line">ID INT NOT NULL,   </span><br><span class="line"> </span><br><span class="line">username VARCHAR(16) NOT NULL,  </span><br><span class="line"> </span><br><span class="line">UNIQUE [indexName] (username(length))  </span><br><span class="line"> </span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="使用ALTER-命令添加和删除索引"><a href="#使用ALTER-命令添加和删除索引" class="headerlink" title="使用ALTER 命令添加和删除索引"></a>使用ALTER 命令添加和删除索引</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE tbl_name ADD PRIMARY KEY (column_list): 该语句添加一个主键，这意味着索引值必须是唯一的，且不能为NULL。</span><br><span class="line">ALTER TABLE tbl_name ADD UNIQUE index_name (column_list): 这条语句创建索引的值必须是唯一的（除了NULL外，NULL可能会出现多次）。</span><br><span class="line">ALTER TABLE tbl_name ADD INDEX index_name (column_list): 添加普通索引，索引值可出现多次。</span><br><span class="line">ALTER TABLE tbl_name ADD FULLTEXT index_name (column_list):该语句指定了索引为 FULLTEXT ，用于全文索引。</span><br></pre></td></tr></table></figure><h2 id="使用-ALTER-命令添加和删除主键"><a href="#使用-ALTER-命令添加和删除主键" class="headerlink" title="使用 ALTER 命令添加和删除主键"></a>使用 ALTER 命令添加和删除主键</h2><p>主键只能作用于一个列上，添加主键索引时，你需要确保该主键默认不为空（NOT NULL）。实例如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE testalter_tbl MODIFY i INT NOT NULL;</span><br><span class="line">mysql&gt; ALTER TABLE testalter_tbl ADD PRIMARY KEY (i);</span><br><span class="line">你也可以使用 ALTER 命令删除主键：</span><br><span class="line">mysql&gt; ALTER TABLE testalter_tbl DROP PRIMARY KEY;</span><br></pre></td></tr></table></figure><p>删除主键时只需指定PRIMARY KEY，但在删除索引时，你必须知道索引名。</p><h2 id="显示索引信息"><a href="#显示索引信息" class="headerlink" title="显示索引信息"></a>显示索引信息</h2><p>你可以使用 SHOW INDEX 命令来列出表中的相关的索引信息。可以通过添加 \G 来格式化输出信息。<br>比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">SHOW INDEX FROM table_name; \G</span><br></pre></td></tr></table></figure><h1 id="临时表"><a href="#临时表" class="headerlink" title="临时表"></a>临时表</h1><h2 id="创建-1"><a href="#创建-1" class="headerlink" title="创建"></a>创建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TEMPORARY TABLE SalesSummary (</span><br><span class="line">    -&gt; product_name VARCHAR(50) NOT NULL</span><br><span class="line">    -&gt; , total_sales DECIMAL(12,2) NOT NULL DEFAULT 0.00</span><br><span class="line">    -&gt; , avg_unit_price DECIMAL(7,2) NOT NULL DEFAULT 0.00</span><br><span class="line">    -&gt; , total_units_sold INT UNSIGNED NOT NULL DEFAULT 0</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>需要注意，只要你断开mysql的连接，临时表就会删除。</p><h2 id="删除-1"><a href="#删除-1" class="headerlink" title="删除"></a>删除</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE SalesSummary;</span><br></pre></td></tr></table></figure><h1 id="复制表"><a href="#复制表" class="headerlink" title="复制表"></a>复制表</h1><p>复制表的逻辑是，查询一个现有的表的创建命令，然后根据这个命令去创建。<br>比如，需要创建的表的名字是sales,那么查询该命令应为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show create table sales \G;</span><br></pre></td></tr></table></figure><h1 id="处理重复数据"><a href="#处理重复数据" class="headerlink" title="处理重复数据"></a>处理重复数据</h1><h2 id="如何防止"><a href="#如何防止" class="headerlink" title="如何防止"></a>如何防止</h2><p>首先，没有主键和索引的表，默认可以出现多个重复记录，例如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE person_tbl</span><br><span class="line">(</span><br><span class="line">    first_name CHAR(20),</span><br><span class="line">    last_name CHAR(20),</span><br><span class="line">    sex CHAR(10)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>所以可以利用主键来达到防止重复记录的目的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE person_tbl</span><br><span class="line">(</span><br><span class="line">   first_name CHAR(20) NOT NULL,</span><br><span class="line">   last_name CHAR(20) NOT NULL,</span><br><span class="line">   sex CHAR(10),</span><br><span class="line">   PRIMARY KEY (last_name, first_name)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>我们插入数据的时候，INSERT IGNORE INTO，如果有重复的数据，会直接跳过去，而REPLACE INTO into如果存在primary 或 unique相同的记录，则先删除掉。再插入新记录。</p></blockquote><h2 id="统计重复数据"><a href="#统计重复数据" class="headerlink" title="统计重复数据"></a>统计重复数据</h2><p>统计表中 first_name 和 last_name的重复记录数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT COUNT(*) as repetitions, last_name, first_name</span><br><span class="line">    -&gt; FROM person_tbl</span><br><span class="line">    -&gt; GROUP BY last_name, first_name</span><br><span class="line">    -&gt; HAVING repetitions &gt; 1;</span><br></pre></td></tr></table></figure><h1 id="mysql中的函数"><a href="#mysql中的函数" class="headerlink" title="mysql中的函数"></a>mysql中的函数</h1><h2 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a>文本处理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select vend_name,UPPER(vend_name) AS vend_name_upcase from Vendors order by vend_name;</span><br></pre></td></tr></table></figure><h2 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Select order_num from orders where YEAR(order_date) = 2004;</span><br></pre></td></tr></table></figure><h2 id="数值处理"><a href="#数值处理" class="headerlink" title="数值处理"></a>数值处理</h2><p>ABS(),COS,EXP()等等。</p><h1 id="汇总数据"><a href="#汇总数据" class="headerlink" title="汇总数据"></a>汇总数据</h1><blockquote><p>检索一些表本身的信息，如行数列数等等。</p></blockquote><h2 id="聚集函数"><a href="#聚集函数" class="headerlink" title="聚集函数"></a>聚集函数</h2><ul><li>avg(),某列的平均值</li><li>count(),平均数</li><li>max（）最大值</li><li>min（）最小</li><li>sum（）和</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 统计有email的客户数</span><br><span class="line">select count(cust_email) as num_cust from customers;</span><br><span class="line"></span><br><span class="line"># 统计有email的客户数（包括null值）</span><br><span class="line">select count(*) as num_cust from customers;</span><br><span class="line"></span><br><span class="line"># distinct的意思是，不可以重复，意思求平均的时候，不把重复的计算在内</span><br><span class="line">select avg(distinct prod_price) AS avg_price from Products where vend_id = &apos;DLL01&apos;;</span><br><span class="line"></span><br><span class="line"># 组合聚集函数</span><br><span class="line">select count(*) AS num_items, min(prod_price) as price_min, max(prod_price) as price_max, avg(prod_price) as price_avg from products;</span><br></pre></td></tr></table></figure><h1 id="MySQL-及-SQL-注入"><a href="#MySQL-及-SQL-注入" class="headerlink" title="MySQL 及 SQL 注入"></a>MySQL 及 SQL 注入</h1><p>如果通过网页获取用户的数据再放入mysql中，那么极大的可能会遭遇sql注入。如何防止呢？<br><strong>我们永远不要信任用户的输入，我们必须认定用户输入的数据都是不安全的</strong></p><ol><li><p>永远不要信任用户的输入。对用户的输入进行校验，可以通过正则表达式，或限制长度；对单引号和 双”-“进行转换等。</p></li><li><p>永远不要使用动态拼装sql，可以使用参数化的sql或者直接使用存储过程进行数据查询存取。</p></li><li>永远不要使用管理员权限的数据库连接，为每个应用使用单独的权限有限的数据库连接。</li><li>不要把机密信息直接存放，加密或者hash掉密码和敏感的信息。</li><li>应用的异常信息应该给出尽可能少的提示，最好使用自定义的错误信息对原始错误信息进行包装</li><li>sql注入的检测方法一般采取辅助软件或网站平台来检测，软件一般采用sql注入检测工具jsky，网站平台就有亿思网站安全平台检测工具。MDCSOFT SCAN等。采用MDCSOFT-IPS可以有效的防御SQL注入，XSS攻击等。</li></ol><p>更多可以参考<a href="http://www.runoob.com/mysql/mysql-database-export.html" target="_blank" rel="noopener">菜鸟教程</a>。</p><h1 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h1><h2 id="到文本"><a href="#到文本" class="headerlink" title="到文本"></a>到文本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM table_name INTO OUTFILE &apos;/tmp/output.txt&apos;;</span><br></pre></td></tr></table></figure><h2 id="到CSV"><a href="#到CSV" class="headerlink" title="到CSV"></a>到CSV</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM passwd INTO OUTFILE &apos;/tmp/tutorials.txt&apos;</span><br><span class="line">    -&gt; FIELDS TERMINATED BY &apos;,&apos; ENCLOSED BY &apos;&quot;&apos;</span><br><span class="line">    -&gt; LINES TERMINATED BY &apos;\r\n&apos;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT a,b,a+b INTO OUTFILE &apos;/tmp/result.text&apos;</span><br><span class="line">FIELDS TERMINATED BY &apos;,&apos; OPTIONALLY ENCLOSED BY &apos;&quot;&apos;</span><br><span class="line">LINES TERMINATED BY &apos;\n&apos;</span><br><span class="line">FROM test_table;</span><br></pre></td></tr></table></figure><h2 id="到SQL文件"><a href="#到SQL文件" class="headerlink" title="到SQL文件"></a>到SQL文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p RUNOOB runoob_tbl &gt; dump.txt</span><br></pre></td></tr></table></figure><h2 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h2><p>将数据写入一个文件，使用SELECT … INTO OUTFILE，为了将文件读回数据库，使用LOAD DATA INFILE。</p><p>读取数据的时候，是可以指定文件中的顺序和表汇总的顺序的，如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; LOAD DATA LOCAL INFILE &apos;dump.txt&apos; </span><br><span class="line">    -&gt; INTO TABLE mytbl (b, c, a);</span><br></pre></td></tr></table></figure><h2 id="使用-mysqlimport-导入数据"><a href="#使用-mysqlimport-导入数据" class="headerlink" title="使用 mysqlimport 导入数据"></a>使用 mysqlimport 导入数据</h2><p>从文件 dump.txt 中将数据导入到 mytbl 数据表中, 可以使用以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mysqlimport -u root -p --local database_name dump.txt</span><br><span class="line">password *****</span><br></pre></td></tr></table></figure></p><p>mysqlimport命令可以指定选项来设置指定格式,命令语句格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mysqlimport -u root -p --local --fields-terminated-by=&quot;:&quot; \</span><br><span class="line">   --lines-terminated-by=&quot;\r\n&quot;  database_name dump.txt</span><br><span class="line">password *****</span><br></pre></td></tr></table></figure><p>mysqlimport 语句中使用 –columns 选项来设置列的顺序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mysqlimport -u root -p --local --columns=b,c,a \</span><br><span class="line">    database_name dump.txt</span><br><span class="line">password *****</span><br></pre></td></tr></table></figure><p>更多参考<a href="http://www.runoob.com/mysql/mysql-database-import.html" target="_blank" rel="noopener">菜鸟教程</a>。</p><h1 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h1><h2 id="备份到文本文件"><a href="#备份到文本文件" class="headerlink" title="备份到文本文件"></a>备份到文本文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p database_name table_name &gt; dump.txt</span><br></pre></td></tr></table></figure><h2 id="还原数据"><a href="#还原数据" class="headerlink" title="还原数据"></a>还原数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p database_name &lt; dump.txt</span><br><span class="line"></span><br><span class="line"># 或</span><br><span class="line"></span><br><span class="line">LOAD DATA LOCAL INFILE &apos;dump.txt&apos; INTO TABLE mytbl;</span><br></pre></td></tr></table></figure><p>对于可以互相访问的主机，可以直接备份</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p database_name \</span><br><span class="line">       | mysql -h other-host.com database_name</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://www.scienjus.com/install-mysql-on-mac/" target="_blank" rel="noopener">在Mac下安装MySQL</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;针对常用的一些操作与命令，做个笔记，仅供参考 👨‍💻&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="coding" scheme="http://wittyfans.com/categories/coding/"/>
    
    
      <category term="big data" scheme="http://wittyfans.com/tags/big-data/"/>
    
      <category term="sql" scheme="http://wittyfans.com/tags/sql/"/>
    
      <category term="mysql" scheme="http://wittyfans.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop The Effective Guide 笔记</title>
    <link href="http://wittyfans.com/coding/Hadoop%20The%20Effective%20Guide%20%E7%AC%94%E8%AE%B0.html"/>
    <id>http://wittyfans.com/coding/Hadoop The Effective Guide 笔记.html</id>
    <published>2018-04-16T08:49:29.000Z</published>
    <updated>2018-04-17T03:58:43.949Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Big data is here, Let’s learn how to store and analyze it.</p></blockquote><a id="more"></a> <h1 id="Hadoop-The-Effective-Guide-Notes"><a href="#Hadoop-The-Effective-Guide-Notes" class="headerlink" title="Hadoop The Effective Guide Notes"></a><em>Hadoop The Effective Guide</em> Notes</h1><h1 id="Meet-Hadoop"><a href="#Meet-Hadoop" class="headerlink" title="Meet Hadoop"></a>Meet Hadoop</h1><ul><li>作者主要说明，大数据的时代已经到来，而且时时刻刻影响着我们的生活，对于这么庞大的数据。</li><li>The good news is that big data is here. The bad news is that we are struggling to store and analyze it.</li><li>A common way of avoiding data loss is through replication</li></ul><h1 id="What’s-in-this-book"><a href="#What’s-in-this-book" class="headerlink" title="What’s in this book?"></a>What’s in this book?</h1><ul><li>Chapter 1 a high-level introduction to Hadoop</li><li>Chapter 2 provides an introduction to MapReduce. </li><li>Chapter 3 looks at Hadoop filesystems, and in particular HDFS, in depth. </li><li>Chapter 4 discusses YARN, Hadoop’s cluster resource management system.</li><li>Chapter 5 covers the I/O building blocks in Hadoop: data integrity, compression, serialization, and file-based data structures.</li></ul><h2 id="关于HBase"><a href="#关于HBase" class="headerlink" title="关于HBase"></a>关于HBase</h2><ul><li>A component to provide online access was HBase, a key-value store that uses HDFS for its underlying storage</li><li>Provides both online read/write access of individual rows and batch operations for reading and writing data in bulk, making it a good solution for building applications on</li></ul><h2 id="关于YARN"><a href="#关于YARN" class="headerlink" title="关于YARN"></a>关于YARN</h2><p>即，Yet Another Resource Negotiator，YARN is a cluster resource management system, which allows any distributed program (not just MapRe‐duce) to run on data in a Hadoop cluster.</p><h2 id="对比其他的系统"><a href="#对比其他的系统" class="headerlink" title="对比其他的系统"></a>对比其他的系统</h2><p>下面介绍一下Hadoop特有的特性</p><ol><li>关系型数据库管理系统<br>对于数据，我们要知道，seek time is improving more slowly than transfer rate.关于影响数据检索效率的因素可以看<a href="https://segmentfault.com/a/1190000002884077" target="_blank" rel="noopener">这篇文章</a></li><li>Grid Computing</li><li>Volunteer Computing</li></ol><h2 id="Hadoop简介"><a href="#Hadoop简介" class="headerlink" title="Hadoop简介"></a>Hadoop简介</h2><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><ol><li><p>bin：Hadoop最基本的管理脚本和使用脚本的目录，这些脚本是sbin目录下管理脚本的基础实现，用户可以直接使用这些脚本管理和使用Hadoop。</p></li><li><p>sbin：Hadoop管理脚本所在的目录，主要包含HDFS和YARN中各类服务的启动/关闭脚本。</p></li><li><p>etc：Hadoop配置文件所在的目录，包括core-site.xml、hdfs-site.xml、mapred-site.xml等从Hadoop1.0继承而来的配置文件和yarn-site.xml等Hadoop2.0新增的配置文件。</p></li><li><p>本地平台相关库（include、lib、libexec），include：对外提供的编程库头文件（具体动态库和静态库在lib目录中），这些头文件均是用C++定义的，通常用于C++程序访问HDFS或者编写MapReduce程序。lib：该目录包含了Hadoop对外提供的编程动态库和静态库，与include目录中的头文件结合使用。libexec：各个服务对用的shell配置文件所在的目录，可用于配置日志输出、启动参数（比如JVM参数）等基本信息。</p></li><li><p>share：Hadoop各个模块编译后的jar包所在的目录。</p></li></ol><h1 id="MapReduce"><a href="#MapReduce" class="headerlink" title="MapReduce"></a>MapReduce</h1><p>什么是一个MapReduce的作业呢？一个完整的作业包括了输入数据、MapReduce程序和配置信息。Hadoop会把作业分为若干个小作业，其中包含两类任务：map任务和reduce任务。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>查看java的jdk路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/libexec/java_home</span><br></pre></td></tr></table></figure><p>编辑别名</p><ol><li>vim ~/.bash_profile</li><li>再运行 source ~/.bash_profile</li><li>source 或小数点 （.） 可以将配置文件的内容读进来目前的 shell 环境中,不需要登出。</li></ol><p>参考：</p><ul><li><a href="http://hanslen.me/2018/01/19/How-to-install-Hadoop-on-macOS-High-Sierra/" target="_blank" rel="noopener">Install Hadoop</a></li></ul><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">alias hstart=&quot;/usr/local/Cellar/hadoop/2.8.2/sbin/start-all.sh&quot;</span><br><span class="line"></span><br><span class="line">alias hstop=&quot;/usr/local/Cellar/hadoop/2.8.2/sbin/stop-all.sh&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">JobTracker:http://localhost:8088</span><br><span class="line"></span><br><span class="line">Specific Node Information:http://localhost:8042, you will see</span><br></pre></td></tr></table></figure><h1 id="Hadoop节点"><a href="#Hadoop节点" class="headerlink" title="Hadoop节点"></a>Hadoop节点</h1><p>用户的数据进来，会把数据分成一份一份的block</p><ul><li><a href="https://yuerblog.cc/2017/01/22/understand-bridge-and-dhcp/" target="_blank" rel="noopener">关于桥接与NAT的介绍不错的文章</a></li></ul><h1 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h1><h2 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h2><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">CentOS7 已经废除了ipconfig命令</span><br><span class="line"># 查看网卡信息</span><br><span class="line">1. 网卡细节，输入ip addr</span><br><span class="line">2. 查看网络接口统计数据,输入ip link或ip -s link</span><br><span class="line"></span><br><span class="line"># 如果你不知道在哪里可以找到ifconfig命令，请按照以下简单的步骤来找到它。首先，让我们找出哪个包提供了ifconfig命令：</span><br><span class="line">yum provides ifconfig</span><br><span class="line"></span><br><span class="line"># 安装ipconfig</span><br><span class="line">yum install net-tools</span><br></pre></td></tr></table></figure><h2 id="配置Hadoop"><a href="#配置Hadoop" class="headerlink" title="配置Hadoop"></a>配置Hadoop</h2><p>主要有三个文件用来配置，这些配置文件都在conf子目录中：</p><ul><li>core-site.xml，指定默认文件系统和工作空间，类似tmp目录需要最创建</li><li>hdfs-site.xml，配置HDFS属性</li><li>mapred-site.xml，配置mapReduce属性</li><li>workers,写上slaves的host（这个问题困扰我好几天，我看的教程是2.几的）</li></ul><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">entos从7开始默认用的是firewalld，这个是基于iptables的，虽然有iptables的核心，但是iptables的服务是没安装的。所以你只要停止firewalld服务即可：</span><br><span class="line">sudo systemctl stop firewalld.service &amp;&amp; sudo systemctl disable firewalld.service</span><br><span class="line"></span><br><span class="line">如果你要改用iptables的话，需要安装iptables服务：</span><br><span class="line">yum install iptables-services</span><br><span class="line">sudo systemctl enable iptables &amp;&amp; sudo systemctl enable ip6tables</span><br><span class="line">sudo systemctl start iptables &amp;&amp; sudo systemctl start ip6tables</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.zybuluo.com/Emptyset/note/220230" target="_blank" rel="noopener">Hadoop完全分布式集群搭建手记</a></li><li><a href="https://zhangchenchen.github.io/2018/01/30/record-for-hdfs/" target="_blank" rel="noopener">Hadoop学习之HDFS</a></li><li><a href="https://www.jianshu.com/p/7e1460c931d0" target="_blank" rel="noopener">Hadoop搭建与概念介绍</a></li><li><a href="https://www.jianshu.com/p/ea0ffb832161" target="_blank" rel="noopener">HDFS的shell操作及基本工作机制</a></li></ul><h2 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h2><ul><li>cluster：集群</li><li>estimate:估计</li><li>forecasting:预测</li><li>tenfold：十倍</li><li>avd：热衷于</li><li>growing apace：增长迅速</li><li>notoriously challenging：众所周知的挑战</li><li>In a nutshell：简而言之</li><li>evolved：进化</li><li>ad hoc analysis</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Big data is here, Let’s learn how to store and analyze it.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="coding" scheme="http://wittyfans.com/categories/coding/"/>
    
    
      <category term="big data" scheme="http://wittyfans.com/tags/big-data/"/>
    
      <category term="hadoop" scheme="http://wittyfans.com/tags/hadoop/"/>
    
      <category term="hive" scheme="http://wittyfans.com/tags/hive/"/>
    
      <category term="大数据" scheme="http://wittyfans.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>《颜氏家训》读书笔记</title>
    <link href="http://wittyfans.com/reading/%E3%80%8A%E9%A2%9C%E6%B0%8F%E5%AE%B6%E8%AE%AD%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0.html"/>
    <id>http://wittyfans.com/reading/《颜氏家训》读书笔记.html</id>
    <published>2018-03-19T15:22:01.000Z</published>
    <updated>2018-03-19T15:24:50.836Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>颜氏家训在中国广为人知，所谓古今家训，以次为祖。<br>上周在书店看到此书，随便翻阅了一下便买了下来，一是因为书便宜，才22块，二是我购得这本为精简版，即根据王利器的书作为底本，重新编排的，适合作为一本入门书。</p></blockquote><a id="more"></a><h1 id="颜氏家训"><a href="#颜氏家训" class="headerlink" title="颜氏家训"></a>颜氏家训</h1><h1 id="序致"><a href="#序致" class="headerlink" title="序致"></a>序致</h1><ul><li>兄弟关系不同于旁人，相互期望过高就容易产生不满，而彼此关系亲密，不满也容易消除。</li><li>兄弟不和睦，子侄就不会相互爱护，子侄不爱护，整个家族子弟的关系都会疏远，感情淡薄。</li><li>妯娌之间，非常容易产生误会，之所以这样，是因为处理大家庭中的事物大家都各怀私心，肩负责任时，又挂念着个人恩怨，与其让她们住在一起，还不如让她们分开。</li><li>继母残虐孤遗，离间骨肉之事常有，再娶之事，慎之慎之！</li><li>按照一般人的秉性，后夫大都宠爱前夫的孩子，后妻则必定会虐待前妻的子女；这不是因为妇人天生嫉妒性情强，男子本身容易成迷诱惑。前夫的子女，不敢与自己的子女争夺家产，在这种情况下，后夫会从小照顾扶养他，日子一长自然会产生爱心。前妻的孩子，年龄地位一般都在自己的子女之上，无论做官，读书，还是娶妻，出嫁，没有一样不要提防的，所以后母大都会虐待他们。父母宠爱异姓孩子招致自己的孩子怨恨，继母虐待前妻孩子则会使兄弟之间反目成仇，凡是家里存在这种问题的，都是家庭的灾祸啊。</li></ul><h1 id="治家"><a href="#治家" class="headerlink" title="治家"></a>治家</h1><ul><li>风化教育都是由上而下推行的，父亲不慈爱则子女不孝顺，兄长不友爱则弟弟不恭敬，丈夫不情义则妻子不温顺。假如父亲次爱有加而子女忤逆不孝，兄长友爱备至而弟妹倨傲不恭，丈夫情谊深厚而妻子盛气凌人，那这些人就是天生的凶恶之徒，只能用暴力去威慑他们，不是教育感化所能改变的（曾国藩则强调对待家人，言语不可过激，如果家人执意而为，那就旁听侧记的提醒）。</li><li>妇人的秉性，大多宠爱女婿而虐待儿媳，宠爱女婿则儿子的不满就会产生，虐待儿媳，则女儿的谗言就随之而至。这是家庭中常出现的弊端，不能不戒。</li><li>借别人的书籍，应该爱护，如果借来时就有损坏，就替别人修补好。</li></ul><h1 id="慕贤"><a href="#慕贤" class="headerlink" title="慕贤"></a>慕贤</h1><ul><li>世间的人大多见识不明，对传闻的人和事很看重，对亲眼所见的东西则很轻视；对远方的事物很感兴趣，对近处的事物则不放在心上；从小长大的人，如果谁成了贤达之士，人们也往往对他轻慢侮弄，缺乏应有的礼貌和敬重。而处在他乡异县的人，凭着那么点名声，就能让大家伸着脖子，踮起脚跟，如饥似渴地盼望一见。其实远处的还不如近处的。</li></ul><h1 id="勉学"><a href="#勉学" class="headerlink" title="勉学"></a>勉学</h1><ul><li>人生在世，那些圣明帝王尚且需要勤奋学习，何况普通百姓呢？</li><li>不能以有学问的贫贱，去和没学问的人的富贵相比。</li><li>人们看到乡邻亲戚中有优秀的人物，就让自己的子弟铁慕他们，向他们学习，却不知道让自己的子弟向古人学习，这是多么糊涂啊？世人只知骑胺马，披错甲，手持长 矛强弓，就认为自己能当将军，却不知道了解天时，洞悉地理，栓衡形势优劣，审察把握兴盛衰亡的种种奥妙。一般人只知道当宰相的裏承旨意，统领百官，为国积财储粮，就说自己也能当宰相；却不知道侍奉鬼神，移风易俗，调节阴阳，荐贤举能的种种周密的工作。只知道地方官不能聚敛私财，公事尽快办理，就说自己能治理百姓；却不知道诚心待人，为人楷模，御民有术，止风灭火，变恶为善的种种方法。只知道依照法令条律，判刑宜早，赦免宜迟，就说自己能秉公办案；却不知道同績观罪、分剑追财，用假言诱使奸诈者暴露，不用反复审问而弄清案情。推而广之，甚至那些农夫、商贾、工匠，厮役、僮仆，渔民、屠 夫，喂牛的、放羊的，他们中间都有杰出之士，可以作为学习的榜样。</li><li>尚书说：“喜欢提问则知识充足”，礼经又说：“独自学习而没有朋友共同商讨，就会孤陋寡闻”，看来学习要共同切磋，互相启发，才能更加明白。</li></ul><h1 id="名实"><a href="#名实" class="headerlink" title="名实"></a>名实</h1><ul><li>人的双脚所踩的范围，不过几寸，但是走在尺多宽的小路上，常常会失足掉下悬崖，这是为什么呢？因为这些地方两边都没有空余的地方。君子立世也是这个样子，最真诚的话，人们一定不会相信。最高洁的行为，反倒会招致某些人的怀疑，这些都是因为人的一言一行，声望名誉有余地的缘故。</li></ul><h1 id="止足"><a href="#止足" class="headerlink" title="止足"></a>止足</h1><ul><li>欲望不可以放纵，志向不可以满足，宇宙还可以达到边缘，人的本性则没有尽头，只有减少欲望，知道满足而止，给自己立个限度。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;颜氏家训在中国广为人知，所谓古今家训，以次为祖。&lt;br&gt;上周在书店看到此书，随便翻阅了一下便买了下来，一是因为书便宜，才22块，二是我购得这本为精简版，即根据王利器的书作为底本，重新编排的，适合作为一本入门书。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="reading" scheme="http://wittyfans.com/categories/reading/"/>
    
    
      <category term="家书" scheme="http://wittyfans.com/tags/%E5%AE%B6%E4%B9%A6/"/>
    
      <category term="国学" scheme="http://wittyfans.com/tags/%E5%9B%BD%E5%AD%A6/"/>
    
  </entry>
  
</feed>
